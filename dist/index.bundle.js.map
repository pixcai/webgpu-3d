{"version":3,"file":"index.bundle.js","mappings":"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","sources":["webpack://webgpu-3d/./node_modules/3d-view-controls/camera.js","webpack://webgpu-3d/./node_modules/3d-view/view.js","webpack://webgpu-3d/./node_modules/binary-search-bounds/search-bounds.js","webpack://webgpu-3d/./src/index.css","webpack://webgpu-3d/./node_modules/css-loader/dist/runtime/api.js","webpack://webgpu-3d/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://webgpu-3d/./node_modules/cubic-hermite/hermite.js","webpack://webgpu-3d/./node_modules/filtered-vector/fvec.js","webpack://webgpu-3d/./node_modules/gl-mat4/clone.js","webpack://webgpu-3d/./node_modules/gl-mat4/create.js","webpack://webgpu-3d/./node_modules/gl-mat4/determinant.js","webpack://webgpu-3d/./node_modules/gl-mat4/fromQuat.js","webpack://webgpu-3d/./node_modules/gl-mat4/fromRotationTranslation.js","webpack://webgpu-3d/./node_modules/gl-mat4/identity.js","webpack://webgpu-3d/./node_modules/gl-mat4/invert.js","webpack://webgpu-3d/./node_modules/gl-mat4/lookAt.js","webpack://webgpu-3d/./node_modules/gl-mat4/multiply.js","webpack://webgpu-3d/./node_modules/gl-mat4/rotate.js","webpack://webgpu-3d/./node_modules/gl-mat4/rotateX.js","webpack://webgpu-3d/./node_modules/gl-mat4/rotateY.js","webpack://webgpu-3d/./node_modules/gl-mat4/rotateZ.js","webpack://webgpu-3d/./node_modules/gl-mat4/scale.js","webpack://webgpu-3d/./node_modules/gl-mat4/translate.js","webpack://webgpu-3d/./node_modules/gl-mat4/transpose.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/common.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/mat2.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/mat2d.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/mat3.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/mat4.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/vec3.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/vec4.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/quat.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/quat2.js","webpack://webgpu-3d/./node_modules/gl-matrix/esm/vec2.js","webpack://webgpu-3d/./node_modules/gl-quat/slerp.js","webpack://webgpu-3d/./node_modules/gl-vec3/cross.js","webpack://webgpu-3d/./node_modules/gl-vec3/dot.js","webpack://webgpu-3d/./node_modules/gl-vec3/length.js","webpack://webgpu-3d/./node_modules/gl-vec3/lerp.js","webpack://webgpu-3d/./node_modules/gl-vec3/normalize.js","webpack://webgpu-3d/./node_modules/has-passive-events/index.js","webpack://webgpu-3d/./node_modules/is-browser/client.js","webpack://webgpu-3d/./node_modules/mat4-decompose/index.js","webpack://webgpu-3d/./node_modules/mat4-decompose/normalize.js","webpack://webgpu-3d/./node_modules/mat4-interpolate/index.js","webpack://webgpu-3d/./node_modules/mat4-recompose/index.js","webpack://webgpu-3d/./node_modules/matrix-camera-controller/matrix.js","webpack://webgpu-3d/./node_modules/mouse-change/mouse-listen.js","webpack://webgpu-3d/./node_modules/mouse-event-offset/index.js","webpack://webgpu-3d/./node_modules/mouse-event/mouse.js","webpack://webgpu-3d/./node_modules/mouse-wheel/wheel.js","webpack://webgpu-3d/./node_modules/orbit-camera-controller/lib/quatFromFrame.js","webpack://webgpu-3d/./node_modules/orbit-camera-controller/orbit.js","webpack://webgpu-3d/./node_modules/parse-unit/index.js","webpack://webgpu-3d/./node_modules/quat-slerp/index.js","webpack://webgpu-3d/./node_modules/right-now/browser.js","webpack://webgpu-3d/./src/index.css?cfe4","webpack://webgpu-3d/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://webgpu-3d/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://webgpu-3d/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://webgpu-3d/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://webgpu-3d/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://webgpu-3d/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://webgpu-3d/./node_modules/to-px/browser.js","webpack://webgpu-3d/./src/classes.ts","webpack://webgpu-3d/./src/helpers.ts","webpack://webgpu-3d/./src/objects/cube.ts","webpack://webgpu-3d/./src/objects/cylinder.ts","webpack://webgpu-3d/./src/objects/index.ts","webpack://webgpu-3d/./src/objects/sphere.ts","webpack://webgpu-3d/./src/objects/torus.ts","webpack://webgpu-3d/./src/renderer.ts","webpack://webgpu-3d/./src/shaders.ts","webpack://webgpu-3d/./node_modules/turntable-camera-controller/turntable.js","webpack://webgpu-3d/webpack/bootstrap","webpack://webgpu-3d/webpack/runtime/compat get default export","webpack://webgpu-3d/webpack/runtime/define property getters","webpack://webgpu-3d/webpack/runtime/global","webpack://webgpu-3d/webpack/runtime/hasOwnProperty shorthand","webpack://webgpu-3d/webpack/runtime/make namespace object","webpack://webgpu-3d/./src/index.ts"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = createCamera\r\n\r\nvar now         = require('right-now')\r\nvar createView  = require('3d-view')\r\nvar mouseChange = require('mouse-change')\r\nvar mouseWheel  = require('mouse-wheel')\r\nvar mouseOffset = require('mouse-event-offset')\r\nvar hasPassive  = require('has-passive-events')\r\n\r\nfunction createCamera(element, options) {\r\n  element = element || document.body\r\n  options = options || {}\r\n\r\n  var limits  = [ 0.01, Infinity ]\r\n  if('distanceLimits' in options) {\r\n    limits[0] = options.distanceLimits[0]\r\n    limits[1] = options.distanceLimits[1]\r\n  }\r\n  if('zoomMin' in options) {\r\n    limits[0] = options.zoomMin\r\n  }\r\n  if('zoomMax' in options) {\r\n    limits[1] = options.zoomMax\r\n  }\r\n\r\n  var view = createView({\r\n    center: options.center || [0,0,0],\r\n    up:     options.up     || [0,1,0],\r\n    eye:    options.eye    || [0,0,10],\r\n    mode:   options.mode   || 'orbit',\r\n    distanceLimits: limits\r\n  })\r\n\r\n  var pmatrix = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n  var distance = 0.0\r\n  var width   = element.clientWidth\r\n  var height  = element.clientHeight\r\n\r\n  var camera = {\r\n    view:               view,\r\n    element:            element,\r\n    delay:              options.delay          || 16,\r\n    rotateSpeed:        options.rotateSpeed    || 1,\r\n    zoomSpeed:          options.zoomSpeed      || 1,\r\n    translateSpeed:     options.translateSpeed || 1,\r\n    flipX:              !!options.flipX,\r\n    flipY:              !!options.flipY,\r\n    modes:              view.modes,\r\n    tick: function() {\r\n      var t = now()\r\n      var delay = this.delay\r\n      view.idle(t-delay)\r\n      view.flush(t-(100+delay*2))\r\n      var ctime = t - 2 * delay\r\n      view.recalcMatrix(ctime)\r\n      var allEqual = true\r\n      var matrix = view.computedMatrix\r\n      for(var i=0; i<16; ++i) {\r\n        allEqual = allEqual && (pmatrix[i] === matrix[i])\r\n        pmatrix[i] = matrix[i]\r\n      }\r\n      var sizeChanged =\r\n          element.clientWidth === width &&\r\n          element.clientHeight === height\r\n      width  = element.clientWidth\r\n      height = element.clientHeight\r\n      if(allEqual) {\r\n        return !sizeChanged\r\n      }\r\n      distance = Math.exp(view.computedRadius[0])\r\n      return true\r\n    },\r\n    lookAt: function(center, eye, up) {\r\n      view.lookAt(view.lastT(), center, eye, up)\r\n    },\r\n    rotate: function(pitch, yaw, roll) {\r\n      view.rotate(view.lastT(), pitch, yaw, roll)\r\n    },\r\n    pan: function(dx, dy, dz) {\r\n      view.pan(view.lastT(), dx, dy, dz)\r\n    },\r\n    translate: function(dx, dy, dz) {\r\n      view.translate(view.lastT(), dx, dy, dz)\r\n    }\r\n  }\r\n\r\n  Object.defineProperties(camera, {\r\n    matrix: {\r\n      get: function() {\r\n        return view.computedMatrix\r\n      },\r\n      set: function(mat) {\r\n        view.setMatrix(view.lastT(), mat)\r\n        return view.computedMatrix\r\n      },\r\n      enumerable: true\r\n    },\r\n    mode: {\r\n      get: function() {\r\n        return view.getMode()\r\n      },\r\n      set: function(mode) {\r\n        view.setMode(mode)\r\n        return view.getMode()\r\n      },\r\n      enumerable: true\r\n    },\r\n    center: {\r\n      get: function() {\r\n        return view.computedCenter\r\n      },\r\n      set: function(ncenter) {\r\n        view.lookAt(view.lastT(), ncenter)\r\n        return view.computedCenter\r\n      },\r\n      enumerable: true\r\n    },\r\n    eye: {\r\n      get: function() {\r\n        return view.computedEye\r\n      },\r\n      set: function(neye) {\r\n        view.lookAt(view.lastT(), null, neye)\r\n        return view.computedEye\r\n      },\r\n      enumerable: true\r\n    },\r\n    up: {\r\n      get: function() {\r\n        return view.computedUp\r\n      },\r\n      set: function(nup) {\r\n        view.lookAt(view.lastT(), null, null, nup)\r\n        return view.computedUp\r\n      },\r\n      enumerable: true\r\n    },\r\n    distance: {\r\n      get: function() {\r\n        return distance\r\n      },\r\n      set: function(d) {\r\n        view.setDistance(view.lastT(), d)\r\n        return d\r\n      },\r\n      enumerable: true\r\n    },\r\n    distanceLimits: {\r\n      get: function() {\r\n        return view.getDistanceLimits(limits)\r\n      },\r\n      set: function(v) {\r\n        view.setDistanceLimits(v)\r\n        return v\r\n      },\r\n      enumerable: true\r\n    }\r\n  })\r\n\r\n  element.addEventListener('contextmenu', function(ev) {\r\n    ev.preventDefault()\r\n    return false\r\n  })\r\n\r\n  var lastX = 0, lastY = 0, lastMods = {shift: false, control: false, alt: false, meta: false}\r\n  mouseChange(element, handleInteraction)\r\n\r\n  //enable simple touch interactions\r\n  element.addEventListener('touchstart', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(0, xy[0], xy[1], lastMods)\r\n    handleInteraction(1, xy[0], xy[1], lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  element.addEventListener('touchmove', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(1, xy[0], xy[1], lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  element.addEventListener('touchend', function (ev) {\r\n    var xy = mouseOffset(ev.changedTouches[0], element)\r\n    handleInteraction(0, lastX, lastY, lastMods)\r\n\r\n    ev.preventDefault()\r\n  }, hasPassive ? {passive: false} : false)\r\n\r\n  function handleInteraction (buttons, x, y, mods) {\r\n    var scale = 1.0 / element.clientHeight\r\n    var dx    = scale * (x - lastX)\r\n    var dy    = scale * (y - lastY)\r\n\r\n    var flipX = camera.flipX ? 1 : -1\r\n    var flipY = camera.flipY ? 1 : -1\r\n\r\n    var drot  = Math.PI * camera.rotateSpeed\r\n\r\n    var t = now()\r\n\r\n    if(buttons & 1) {\r\n      if(mods.shift) {\r\n        view.rotate(t, 0, 0, -dx * drot)\r\n      } else {\r\n        view.rotate(t, flipX * drot * dx, -flipY * drot * dy, 0)\r\n      }\r\n    } else if(buttons & 2) {\r\n      view.pan(t, -camera.translateSpeed * dx * distance, camera.translateSpeed * dy * distance, 0)\r\n    } else if(buttons & 4) {\r\n      var kzoom = camera.zoomSpeed * dy / window.innerHeight * (t - view.lastT()) * 50.0\r\n      view.pan(t, 0, 0, distance * (Math.exp(kzoom) - 1))\r\n    }\r\n\r\n    lastX = x\r\n    lastY = y\r\n    lastMods = mods\r\n  }\r\n\r\n  mouseWheel(element, function(dx, dy, dz) {\r\n    var flipX = camera.flipX ? 1 : -1\r\n    var flipY = camera.flipY ? 1 : -1\r\n    var t = now()\r\n    if(Math.abs(dx) > Math.abs(dy)) {\r\n      view.rotate(t, 0, 0, -dx * flipX * Math.PI * camera.rotateSpeed / window.innerWidth)\r\n    } else {\r\n      var kzoom = camera.zoomSpeed * flipY * dy / window.innerHeight * (t - view.lastT()) / 100.0\r\n      view.pan(t, 0, 0, distance * (Math.exp(kzoom) - 1))\r\n    }\r\n  }, true)\r\n\r\n  return camera\r\n}\r\n","'use strict'\n\nmodule.exports = createViewController\n\nvar createTurntable = require('turntable-camera-controller')\nvar createOrbit     = require('orbit-camera-controller')\nvar createMatrix    = require('matrix-camera-controller')\n\nfunction ViewController(controllers, mode) {\n  this._controllerNames = Object.keys(controllers)\n  this._controllerList = this._controllerNames.map(function(n) {\n    return controllers[n]\n  })\n  this._mode   = mode\n  this._active = controllers[mode]\n  if(!this._active) {\n    this._mode   = 'turntable'\n    this._active = controllers.turntable\n  }\n  this.modes = this._controllerNames\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nvar proto = ViewController.prototype\n\nproto.flush = function(a0) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].flush(a0)\n  }\n}\nproto.idle = function(a0) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].idle(a0)\n  }\n}\nproto.lookAt = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].lookAt(a0, a1, a2, a3)\n  }\n}\nproto.rotate = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].rotate(a0, a1, a2, a3)\n  }\n}\nproto.pan = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].pan(a0, a1, a2, a3)\n  }\n}\nproto.translate = function(a0, a1, a2, a3) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].translate(a0, a1, a2, a3)\n  }\n}\nproto.setMatrix = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setMatrix(a0, a1)\n  }\n}\nproto.setDistanceLimits = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setDistanceLimits(a0, a1)\n  }\n}\nproto.setDistance = function(a0, a1) {\n  var cc = this._controllerList\n  for (var i = 0; i < cc.length; ++i) {\n    cc[i].setDistance(a0, a1)\n  }\n}\n\nproto.recalcMatrix = function(t) {\n  this._active.recalcMatrix(t)\n}\n\nproto.getDistance = function(t) {\n  return this._active.getDistance(t)\n}\nproto.getDistanceLimits = function(out) {\n  return this._active.getDistanceLimits(out)\n}\n\nproto.lastT = function() {\n  return this._active.lastT()\n}\n\nproto.setMode = function(mode) {\n  if(mode === this._mode) {\n    return\n  }\n  var idx = this._controllerNames.indexOf(mode)\n  if(idx < 0) {\n    return\n  }\n  var prev  = this._active\n  var next  = this._controllerList[idx]\n  var lastT = Math.max(prev.lastT(), next.lastT())\n\n  prev.recalcMatrix(lastT)\n  next.setMatrix(lastT, prev.computedMatrix)\n\n  this._active = next\n  this._mode   = mode\n\n  //Update matrix properties\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nproto.getMode = function() {\n  return this._mode\n}\n\nfunction createViewController(options) {\n  options = options || {}\n\n  var eye       = options.eye    || [0,0,1]\n  var center    = options.center || [0,0,0]\n  var up        = options.up     || [0,1,0]\n  var limits    = options.distanceLimits || [0, Infinity]\n  var mode      = options.mode   || 'turntable'\n\n  var turntable = createTurntable()\n  var orbit     = createOrbit()\n  var matrix    = createMatrix()\n\n  turntable.setDistanceLimits(limits[0], limits[1])\n  turntable.lookAt(0, eye, center, up)\n  orbit.setDistanceLimits(limits[0], limits[1])\n  orbit.lookAt(0, eye, center, up)\n  matrix.setDistanceLimits(limits[0], limits[1])\n  matrix.lookAt(0, eye, center, up)\n\n  return new ViewController({\n    turntable: turntable,\n    orbit: orbit,\n    matrix: matrix\n  }, mode)\n}","\"use strict\"\n\n// (a, y, c, l, h) = (array, y[, cmp, lo, hi])\n\nfunction ge(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p >= 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction gt(a, y, c, l, h) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p > 0) { i = m; h = m - 1 } else { l = m + 1 }\n  }\n  return i;\n};\n\nfunction lt(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p < 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction le(a, y, c, l, h) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p <= 0) { i = m; l = m + 1 } else { h = m - 1 }\n  }\n  return i;\n};\n\nfunction eq(a, y, c, l, h) {\n  while (l <= h) {\n    var m = (l + h) >>> 1, x = a[m];\n    var p = (c !== undefined) ? c(x, y) : (x - y);\n    if (p === 0) { return m }\n    if (p <= 0) { l = m + 1 } else { h = m - 1 }\n  }\n  return -1;\n};\n\nfunction norm(a, y, c, l, h, f) {\n  if (typeof c === 'function') {\n    return f(a, y, c, (l === undefined) ? 0 : l | 0, (h === undefined) ? a.length - 1 : h | 0);\n  }\n  return f(a, y, undefined, (c === undefined) ? 0 : c | 0, (l === undefined) ? a.length - 1 : l | 0);\n}\n\nmodule.exports = {\n  ge: function(a, y, c, l, h) { return norm(a, y, c, l, h, ge)},\n  gt: function(a, y, c, l, h) { return norm(a, y, c, l, h, gt)},\n  lt: function(a, y, c, l, h) { return norm(a, y, c, l, h, lt)},\n  le: function(a, y, c, l, h) { return norm(a, y, c, l, h, le)},\n  eq: function(a, y, c, l, h) { return norm(a, y, c, l, h, eq)}\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html, body, #app {\\r\\n  margin: 0;\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  background-color: black;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT,YAAY;EACZ,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,uBAAuB;AACzB\",\"sourcesContent\":[\"html, body, #app {\\r\\n  margin: 0;\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  background-color: black;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\"\n\nfunction dcubicHermite(p0, v0, p1, v1, t, f) {\n  var dh00 = 6*t*t-6*t,\n      dh10 = 3*t*t-4*t + 1,\n      dh01 = -6*t*t+6*t,\n      dh11 = 3*t*t-2*t\n  if(p0.length) {\n    if(!f) {\n      f = new Array(p0.length)\n    }\n    for(var i=p0.length-1; i>=0; --i) {\n      f[i] = dh00*p0[i] + dh10*v0[i] + dh01*p1[i] + dh11*v1[i]\n    }\n    return f\n  }\n  return dh00*p0 + dh10*v0 + dh01*p1[i] + dh11*v1\n}\n\nfunction cubicHermite(p0, v0, p1, v1, t, f) {\n  var ti  = (t-1), t2 = t*t, ti2 = ti*ti,\n      h00 = (1+2*t)*ti2,\n      h10 = t*ti2,\n      h01 = t2*(3-2*t),\n      h11 = t2*ti\n  if(p0.length) {\n    if(!f) {\n      f = new Array(p0.length)\n    }\n    for(var i=p0.length-1; i>=0; --i) {\n      f[i] = h00*p0[i] + h10*v0[i] + h01*p1[i] + h11*v1[i]\n    }\n    return f\n  }\n  return h00*p0 + h10*v0 + h01*p1 + h11*v1\n}\n\nmodule.exports = cubicHermite\nmodule.exports.derivative = dcubicHermite","'use strict'\n\nmodule.exports = createFilteredVector\n\nvar cubicHermite = require('cubic-hermite')\nvar bsearch = require('binary-search-bounds')\n\nfunction clamp(lo, hi, x) {\n  return Math.min(hi, Math.max(lo, x))\n}\n\nfunction FilteredVector(state0, velocity0, t0) {\n  this.dimension  = state0.length\n  this.bounds     = [ new Array(this.dimension), new Array(this.dimension) ]\n  for(var i=0; i<this.dimension; ++i) {\n    this.bounds[0][i] = -Infinity\n    this.bounds[1][i] = Infinity\n  }\n  this._state     = state0.slice().reverse()\n  this._velocity  = velocity0.slice().reverse()\n  this._time      = [ t0 ]\n  this._scratch   = [ state0.slice(), state0.slice(), state0.slice(), state0.slice(), state0.slice() ]\n}\n\nvar proto = FilteredVector.prototype\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 1\n  if(idx <= 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._state.splice(0, idx * this.dimension)\n  this._velocity.splice(0, idx * this.dimension)\n}\n\nproto.curve = function(t) {\n  var time      = this._time\n  var n         = time.length\n  var idx       = bsearch.le(time, t)\n  var result    = this._scratch[0]\n  var state     = this._state\n  var velocity  = this._velocity\n  var d         = this.dimension\n  var bounds    = this.bounds\n  if(idx < 0) {\n    var ptr = d-1\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = state[ptr]\n    }\n  } else if(idx >= n-1) {\n    var ptr = state.length-1\n    var tf = t - time[n-1]\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = state[ptr] + tf * velocity[ptr]\n    }\n  } else {\n    var ptr = d * (idx+1) - 1\n    var t0  = time[idx]\n    var t1  = time[idx+1]\n    var dt  = (t1 - t0) || 1.0\n    var x0  = this._scratch[1]\n    var x1  = this._scratch[2]\n    var v0  = this._scratch[3]\n    var v1  = this._scratch[4]\n    var steady = true\n    for(var i=0; i<d; ++i, --ptr) {\n      x0[i] = state[ptr]\n      v0[i] = velocity[ptr] * dt\n      x1[i] = state[ptr+d]\n      v1[i] = velocity[ptr+d] * dt\n      steady = steady && (x0[i] === x1[i] && v0[i] === v1[i] && v0[i] === 0.0)\n    }\n    if(steady) {\n      for(var i=0; i<d; ++i) {\n        result[i] = x0[i]\n      }\n    } else {\n      cubicHermite(x0, v0, x1, v1, (t-t0)/dt, result)\n    }\n  }\n  var lo = bounds[0]\n  var hi = bounds[1]\n  for(var i=0; i<d; ++i) {\n    result[i] = clamp(lo[i], hi[i], result[i])\n  }\n  return result\n}\n\nproto.dcurve = function(t) {\n  var time     = this._time\n  var n        = time.length\n  var idx      = bsearch.le(time, t)\n  var result   = this._scratch[0]\n  var state    = this._state\n  var velocity = this._velocity\n  var d        = this.dimension\n  if(idx >= n-1) {\n    var ptr = state.length-1\n    var tf = t - time[n-1]\n    for(var i=0; i<d; ++i, --ptr) {\n      result[i] = velocity[ptr]\n    }\n  } else {\n    var ptr = d * (idx+1) - 1\n    var t0 = time[idx]\n    var t1 = time[idx+1]\n    var dt = (t1 - t0) || 1.0\n    var x0 = this._scratch[1]\n    var x1 = this._scratch[2]\n    var v0 = this._scratch[3]\n    var v1 = this._scratch[4]\n    var steady = true\n    for(var i=0; i<d; ++i, --ptr) {\n      x0[i] = state[ptr]\n      v0[i] = velocity[ptr] * dt\n      x1[i] = state[ptr+d]\n      v1[i] = velocity[ptr+d] * dt\n      steady = steady && (x0[i] === x1[i] && v0[i] === v1[i] && v0[i] === 0.0)\n    }\n    if(steady) {\n      for(var i=0; i<d; ++i) {\n        result[i] = 0.0\n      }\n    } else {\n      cubicHermite.derivative(x0, v0, x1, v1, (t-t0)/dt, result)\n      for(var i=0; i<d; ++i) {\n        result[i] /= dt\n      }\n    }\n  }\n  return result\n}\n\nproto.lastT = function() {\n  var time = this._time\n  return time[time.length-1]\n}\n\nproto.stable = function() {\n  var velocity = this._velocity\n  var ptr = velocity.length\n  for(var i=this.dimension-1; i>=0; --i) {\n    if(velocity[--ptr]) {\n      return false\n    }\n  }\n  return true\n}\n\nproto.jump = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t < t0 || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var ptr       = state.length-this.dimension\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  this._time.push(t0, t)\n  for(var j=0; j<2; ++j) {\n    for(var i=0; i<d; ++i) {\n      state.push(state[ptr++])\n      velocity.push(0)\n    }\n  }\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    state.push(clamp(lo[i-1], hi[i-1], arguments[i]))\n    velocity.push(0)\n  }\n}\n\nproto.push = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t < t0 || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var ptr       = state.length-this.dimension\n  var dt        = t - t0\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  var sf        = (dt > 1e-6) ? 1/dt : 0\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    var xc = clamp(lo[i-1], hi[i-1], arguments[i])\n    state.push(xc)\n    velocity.push((xc - state[ptr++]) * sf)\n  }\n}\n\nproto.set = function(t) {\n  var d = this.dimension\n  if(t < this.lastT() || arguments.length !== d+1) {\n    return\n  }\n  var state     = this._state\n  var velocity  = this._velocity\n  var bounds    = this.bounds\n  var lo        = bounds[0]\n  var hi        = bounds[1]\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    state.push(clamp(lo[i-1], hi[i-1], arguments[i]))\n    velocity.push(0)\n  }\n}\n\nproto.move = function(t) {\n  var t0 = this.lastT()\n  var d  = this.dimension\n  if(t <= t0 || arguments.length !== d+1) {\n    return\n  }\n  var state    = this._state\n  var velocity = this._velocity\n  var statePtr = state.length - this.dimension\n  var bounds   = this.bounds\n  var lo       = bounds[0]\n  var hi       = bounds[1]\n  var dt       = t - t0\n  var sf       = (dt > 1e-6) ? 1/dt : 0.0\n  this._time.push(t)\n  for(var i=d; i>0; --i) {\n    var dx = arguments[i]\n    state.push(clamp(lo[i-1], hi[i-1], state[statePtr++] + dx))\n    velocity.push(dx * sf)\n  }\n}\n\nproto.idle = function(t) {\n  var t0 = this.lastT()\n  if(t < t0) {\n    return\n  }\n  var d        = this.dimension\n  var state    = this._state\n  var velocity = this._velocity\n  var statePtr = state.length-d\n  var bounds   = this.bounds\n  var lo       = bounds[0]\n  var hi       = bounds[1]\n  var dt       = t - t0\n  this._time.push(t)\n  for(var i=d-1; i>=0; --i) {\n    state.push(clamp(lo[i], hi[i], state[statePtr] + dt * velocity[statePtr]))\n    velocity.push(0)\n    statePtr += 1\n  }\n}\n\nfunction getZero(d) {\n  var result = new Array(d)\n  for(var i=0; i<d; ++i) {\n    result[i] = 0.0\n  }\n  return result\n}\n\nfunction createFilteredVector(initState, initVelocity, initTime) {\n  switch(arguments.length) {\n    case 0:\n      return new FilteredVector([0], [0], 0)\n    case 1:\n      if(typeof initState === 'number') {\n        var zero = getZero(initState)\n        return new FilteredVector(zero, zero, 0)\n      } else {\n        return new FilteredVector(initState, getZero(initState.length), 0)\n      }\n    case 2:\n      if(typeof initVelocity === 'number') {\n        var zero = getZero(initState.length)\n        return new FilteredVector(initState, zero, +initVelocity)\n      } else {\n        initTime = 0\n      }\n    case 3:\n      if(initState.length !== initVelocity.length) {\n        throw new Error('state and velocity lengths must match')\n      }\n      return new FilteredVector(initState, initVelocity, initTime)\n  }\n}\n","module.exports = clone;\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nfunction clone(a) {\n    var out = new Float32Array(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = determinant;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};","module.exports = fromRotationTranslation;\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};","module.exports = rotateX;\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};","module.exports = rotateY;\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};","module.exports = rotateZ;\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\n\nexport function fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\n\nexport function set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the source matrix\n * @returns {mat2} out\n */\n\nexport function adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2\n *\n * @param {ReadonlyMat2} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2\n *\n * @param {ReadonlyMat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {ReadonlyMat2} L the lower triangular matrix\n * @param {ReadonlyMat2} D the diagonal matrix\n * @param {ReadonlyMat2} U the upper triangular matrix\n * @param {ReadonlyMat2} a the input matrix to factorize\n */\n\nexport function LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @returns {mat2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2} a The first matrix.\n * @param {ReadonlyMat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {ReadonlyMat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {ReadonlyMat2} a the first operand\n * @param {ReadonlyMat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2x3 Matrix\n * @module mat2d\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, b,\n *  c, d,\n *  tx, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, b, 0,\n *  c, d, 0,\n *  tx, ty, 1]\n * </pre>\n * The last column is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {ReadonlyMat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {mat2d} out\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {ReadonlyMat2d} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to translate\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat2d} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat2d} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\n * Returns a string representation of a mat2d\n *\n * @param {ReadonlyMat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @returns {mat2d} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {ReadonlyMat2d} a the first operand\n * @param {ReadonlyMat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat2d} a The first matrix.\n * @param {ReadonlyMat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();","import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","module.exports = slerp\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp (out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  var omega, cosom, sinom, scale0, scale1\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom\n    bx = -bx\n    by = -by\n    bz = -bz\n    bw = -bw\n  }\n  // calculate coefficients\n  if ((1.0 - cosom) > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom)\n    sinom = Math.sin(omega)\n    scale0 = Math.sin((1.0 - t) * omega) / sinom\n    scale1 = Math.sin(t * omega) / sinom\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t\n    scale1 = t\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx\n  out[1] = scale0 * ay + scale1 * by\n  out[2] = scale0 * az + scale1 * bz\n  out[3] = scale0 * aw + scale1 * bw\n\n  return out\n}\n","module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}","module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}","module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    out[2] = az + t * (b[2] - az)\n    return out\n}","module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}","'use strict'\r\n\r\nvar isBrowser = require('is-browser')\r\n\r\nfunction detect() {\r\n\tvar supported = false\r\n\r\n\ttry {\r\n\t\tvar opts = Object.defineProperty({}, 'passive', {\r\n\t\t\tget: function() {\r\n\t\t\t\tsupported = true\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\twindow.addEventListener('test', null, opts)\r\n\t\twindow.removeEventListener('test', null, opts)\r\n\t} catch(e) {\r\n\t\tsupported = false\r\n\t}\r\n\r\n\treturn supported\r\n}\r\n\r\nmodule.exports = isBrowser && detect()\r\n","module.exports = true;","/*jshint unused:true*/\n/*\nInput:  matrix      ; a 4x4 matrix\nOutput: translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nReturns false if the matrix cannot be decomposed, true if it can\n\n\nReferences:\nhttps://github.com/kamicane/matrix3d/blob/master/lib/Matrix3d.js\nhttps://github.com/ChromiumWebApps/chromium/blob/master/ui/gfx/transform_util.cc\nhttp://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n*/\n\nvar normalize = require('./normalize')\n\nvar create = require('gl-mat4/create')\nvar clone = require('gl-mat4/clone')\nvar determinant = require('gl-mat4/determinant')\nvar invert = require('gl-mat4/invert')\nvar transpose = require('gl-mat4/transpose')\nvar vec3 = {\n    length: require('gl-vec3/length'),\n    normalize: require('gl-vec3/normalize'),\n    dot: require('gl-vec3/dot'),\n    cross: require('gl-vec3/cross')\n}\n\nvar tmp = create()\nvar perspectiveMatrix = create()\nvar tmpVec4 = [0, 0, 0, 0]\nvar row = [ [0,0,0], [0,0,0], [0,0,0] ]\nvar pdum3 = [0,0,0]\n\nmodule.exports = function decomposeMat4(matrix, translation, scale, skew, perspective, quaternion) {\n    if (!translation) translation = [0,0,0]\n    if (!scale) scale = [0,0,0]\n    if (!skew) skew = [0,0,0]\n    if (!perspective) perspective = [0,0,0,1]\n    if (!quaternion) quaternion = [0,0,0,1]\n\n    //normalize, if not possible then bail out early\n    if (!normalize(tmp, matrix))\n        return false\n\n    // perspectiveMatrix is used to solve for perspective, but it also provides\n    // an easy way to test for singularity of the upper 3x3 component.\n    clone(perspectiveMatrix, tmp)\n\n    perspectiveMatrix[3] = 0\n    perspectiveMatrix[7] = 0\n    perspectiveMatrix[11] = 0\n    perspectiveMatrix[15] = 1\n\n    // If the perspectiveMatrix is not invertible, we are also unable to\n    // decompose, so we'll bail early. Constant taken from SkMatrix44::invert.\n    if (Math.abs(determinant(perspectiveMatrix) < 1e-8))\n        return false\n\n    var a03 = tmp[3], a13 = tmp[7], a23 = tmp[11],\n            a30 = tmp[12], a31 = tmp[13], a32 = tmp[14], a33 = tmp[15]\n\n    // First, isolate perspective.\n    if (a03 !== 0 || a13 !== 0 || a23 !== 0) {\n        tmpVec4[0] = a03\n        tmpVec4[1] = a13\n        tmpVec4[2] = a23\n        tmpVec4[3] = a33\n\n        // Solve the equation by inverting perspectiveMatrix and multiplying\n        // rightHandSide by the inverse.\n        // resuing the perspectiveMatrix here since it's no longer needed\n        var ret = invert(perspectiveMatrix, perspectiveMatrix)\n        if (!ret) return false\n        transpose(perspectiveMatrix, perspectiveMatrix)\n\n        //multiply by transposed inverse perspective matrix, into perspective vec4\n        vec4multMat4(perspective, tmpVec4, perspectiveMatrix)\n    } else { \n        //no perspective\n        perspective[0] = perspective[1] = perspective[2] = 0\n        perspective[3] = 1\n    }\n\n    // Next take care of translation\n    translation[0] = a30\n    translation[1] = a31\n    translation[2] = a32\n\n    // Now get scale and shear. 'row' is a 3 element array of 3 component vectors\n    mat3from4(row, tmp)\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = vec3.length(row[0])\n    vec3.normalize(row[0], row[0])\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = vec3.dot(row[0], row[1])\n    combine(row[1], row[1], row[0], 1.0, -skew[0])\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = vec3.length(row[1])\n    vec3.normalize(row[1], row[1])\n    skew[0] /= scale[1]\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = vec3.dot(row[0], row[2])\n    combine(row[2], row[2], row[0], 1.0, -skew[1])\n    skew[2] = vec3.dot(row[1], row[2])\n    combine(row[2], row[2], row[1], 1.0, -skew[2])\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = vec3.length(row[2])\n    vec3.normalize(row[2], row[2])\n    skew[1] /= scale[2]\n    skew[2] /= scale[2]\n\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    vec3.cross(pdum3, row[1], row[2])\n    if (vec3.dot(row[0], pdum3) < 0) {\n        for (var i = 0; i < 3; i++) {\n            scale[i] *= -1;\n            row[i][0] *= -1\n            row[i][1] *= -1\n            row[i][2] *= -1\n        }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0))\n    quaternion[1] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0))\n    quaternion[2] = 0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0))\n    quaternion[3] = 0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0))\n\n    if (row[2][1] > row[1][2])\n        quaternion[0] = -quaternion[0]\n    if (row[0][2] > row[2][0])\n        quaternion[1] = -quaternion[1]\n    if (row[1][0] > row[0][1])\n        quaternion[2] = -quaternion[2]\n    return true\n}\n\n//will be replaced by gl-vec4 eventually\nfunction vec4multMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n}\n\n//gets upper-left of a 4x4 matrix into a 3x3 of vectors\nfunction mat3from4(out, mat4x4) {\n    out[0][0] = mat4x4[0]\n    out[0][1] = mat4x4[1]\n    out[0][2] = mat4x4[2]\n    \n    out[1][0] = mat4x4[4]\n    out[1][1] = mat4x4[5]\n    out[1][2] = mat4x4[6]\n\n    out[2][0] = mat4x4[8]\n    out[2][1] = mat4x4[9]\n    out[2][2] = mat4x4[10]\n}\n\nfunction combine(out, a, b, scale1, scale2) {\n    out[0] = a[0] * scale1 + b[0] * scale2\n    out[1] = a[1] * scale1 + b[1] * scale2\n    out[2] = a[2] * scale1 + b[2] * scale2\n}","module.exports = function normalize(out, mat) {\n    var m44 = mat[15]\n    // Cannot normalize.\n    if (m44 === 0) \n        return false\n    var scale = 1 / m44\n    for (var i=0; i<16; i++)\n        out[i] = mat[i] * scale\n    return true\n}","var lerp = require('gl-vec3/lerp')\n\nvar recompose = require('mat4-recompose')\nvar decompose = require('mat4-decompose')\nvar determinant = require('gl-mat4/determinant')\nvar slerp = require('quat-slerp')\n\nvar state0 = state()\nvar state1 = state()\nvar tmp = state()\n\nmodule.exports = interpolate\nfunction interpolate(out, start, end, alpha) {\n    if (determinant(start) === 0 || determinant(end) === 0)\n        return false\n\n    //decompose the start and end matrices into individual components\n    var r0 = decompose(start, state0.translate, state0.scale, state0.skew, state0.perspective, state0.quaternion)\n    var r1 = decompose(end, state1.translate, state1.scale, state1.skew, state1.perspective, state1.quaternion)\n    if (!r0 || !r1)\n        return false    \n\n\n    //now lerp/slerp the start and end components into a temporary     lerp(tmptranslate, state0.translate, state1.translate, alpha)\n    lerp(tmp.translate, state0.translate, state1.translate, alpha)\n    lerp(tmp.skew, state0.skew, state1.skew, alpha)\n    lerp(tmp.scale, state0.scale, state1.scale, alpha)\n    lerp(tmp.perspective, state0.perspective, state1.perspective, alpha)\n    slerp(tmp.quaternion, state0.quaternion, state1.quaternion, alpha)\n\n    //and recompose into our 'out' matrix\n    recompose(out, tmp.translate, tmp.scale, tmp.skew, tmp.perspective, tmp.quaternion)\n    return true\n}\n\nfunction state() {\n    return {\n        translate: vec3(),\n        scale: vec3(1),\n        skew: vec3(),\n        perspective: vec4(),\n        quaternion: vec4()\n    }\n}\n\nfunction vec3(n) {\n    return [n||0,n||0,n||0]\n}\n\nfunction vec4() {\n    return [0,0,0,1]\n}","/*\nInput:  translation ; a 3 component vector\n        scale       ; a 3 component vector\n        skew        ; skew factors XY,XZ,YZ represented as a 3 component vector\n        perspective ; a 4 component vector\n        quaternion  ; a 4 component vector\nOutput: matrix      ; a 4x4 matrix\n\nFrom: http://www.w3.org/TR/css3-transforms/#recomposing-to-a-3d-matrix\n*/\n\nvar mat4 = {\n    identity: require('gl-mat4/identity'),\n    translate: require('gl-mat4/translate'),\n    multiply: require('gl-mat4/multiply'),\n    create: require('gl-mat4/create'),\n    scale: require('gl-mat4/scale'),\n    fromRotationTranslation: require('gl-mat4/fromRotationTranslation')\n}\n\nvar rotationMatrix = mat4.create()\nvar temp = mat4.create()\n\nmodule.exports = function recomposeMat4(matrix, translation, scale, skew, perspective, quaternion) {\n    mat4.identity(matrix)\n\n    //apply translation & rotation\n    mat4.fromRotationTranslation(matrix, quaternion, translation)\n\n    //apply perspective\n    matrix[3] = perspective[0]\n    matrix[7] = perspective[1]\n    matrix[11] = perspective[2]\n    matrix[15] = perspective[3]\n        \n    // apply skew\n    // temp is a identity 4x4 matrix initially\n    mat4.identity(temp)\n\n    if (skew[2] !== 0) {\n        temp[9] = skew[2]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    if (skew[1] !== 0) {\n        temp[9] = 0\n        temp[8] = skew[1]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    if (skew[0] !== 0) {\n        temp[8] = 0\n        temp[4] = skew[0]\n        mat4.multiply(matrix, matrix, temp)\n    }\n\n    //apply scale\n    mat4.scale(matrix, matrix, scale)\n    return matrix\n}","'use strict'\n\nvar bsearch   = require('binary-search-bounds')\nvar m4interp  = require('mat4-interpolate')\nvar invert44  = require('gl-mat4/invert')\nvar rotateX   = require('gl-mat4/rotateX')\nvar rotateY   = require('gl-mat4/rotateY')\nvar rotateZ   = require('gl-mat4/rotateZ')\nvar lookAt    = require('gl-mat4/lookAt')\nvar translate = require('gl-mat4/translate')\nvar scale     = require('gl-mat4/scale')\nvar normalize = require('gl-vec3/normalize')\n\nvar DEFAULT_CENTER = [0,0,0]\n\nmodule.exports = createMatrixCameraController\n\nfunction MatrixCameraController(initialMatrix) {\n  this._components    = initialMatrix.slice()\n  this._time          = [0]\n  this.prevMatrix     = initialMatrix.slice()\n  this.nextMatrix     = initialMatrix.slice()\n  this.computedMatrix = initialMatrix.slice()\n  this.computedInverse = initialMatrix.slice()\n  this.computedEye    = [0,0,0]\n  this.computedUp     = [0,0,0]\n  this.computedCenter = [0,0,0]\n  this.computedRadius = [0]\n  this._limits        = [-Infinity, Infinity]\n}\n\nvar proto = MatrixCameraController.prototype\n\nproto.recalcMatrix = function(t) {\n  var time = this._time\n  var tidx = bsearch.le(time, t)\n  var mat = this.computedMatrix\n  if(tidx < 0) {\n    return\n  }\n  var comps = this._components\n  if(tidx === time.length-1) {\n    var ptr = 16*tidx\n    for(var i=0; i<16; ++i) {\n      mat[i] = comps[ptr++]\n    }\n  } else {\n    var dt = (time[tidx+1] - time[tidx])\n    var ptr = 16*tidx\n    var prev = this.prevMatrix\n    var allEqual = true\n    for(var i=0; i<16; ++i) {\n      prev[i] = comps[ptr++]\n    }\n    var next = this.nextMatrix\n    for(var i=0; i<16; ++i) {\n      next[i] = comps[ptr++]\n      allEqual = allEqual && (prev[i] === next[i])\n    }\n    if(dt < 1e-6 || allEqual) {\n      for(var i=0; i<16; ++i) {\n        mat[i] = prev[i]\n      }\n    } else {\n      m4interp(mat, prev, next, (t - time[tidx])/dt)\n    }\n  }\n\n  var up = this.computedUp\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n  normalize(up, up)\n\n  var imat = this.computedInverse\n  invert44(imat, mat)\n  var eye = this.computedEye\n  var w = imat[15]\n  eye[0] = imat[12]/w\n  eye[1] = imat[13]/w\n  eye[2] = imat[14]/w\n\n  var center = this.computedCenter\n  var radius = Math.exp(this.computedRadius[0])\n  for(var i=0; i<3; ++i) {\n    center[i] = eye[i] - mat[2+4*i] * radius\n  }\n}\n\nproto.idle = function(t) {\n  if(t < this.lastT()) {\n    return\n  }\n  var mc = this._components\n  var ptr = mc.length-16\n  for(var i=0; i<16; ++i) {\n    mc.push(mc[ptr++])\n  }\n  this._time.push(t)\n}\n\nproto.flush = function(t) {\n  var idx = bsearch.gt(this._time, t) - 2\n  if(idx < 0) {\n    return\n  }\n  this._time.splice(0, idx)\n  this._components.splice(0, 16*idx)\n}\n\nproto.lastT = function() {\n  return this._time[this._time.length-1]\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n  eye    = eye || this.computedEye\n  center = center || DEFAULT_CENTER\n  up     = up || this.computedUp\n  this.setMatrix(t, lookAt(this.computedMatrix, eye, center, up))\n  var d2 = 0.0\n  for(var i=0; i<3; ++i) {\n    d2 += Math.pow(center[i] - eye[i], 2)\n  }\n  d2 = Math.log(Math.sqrt(d2))\n  this.computedRadius[0] = d2\n}\n\nproto.rotate = function(t, yaw, pitch, roll) {\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  if(yaw)   rotateY(mat, mat, yaw)\n  if(pitch) rotateX(mat, mat, pitch)\n  if(roll)  rotateZ(mat, mat, roll)\n  this.setMatrix(t, invert44(this.computedMatrix, mat))\n}\n\nvar tvec = [0,0,0]\n\nproto.pan = function(t, dx, dy, dz) {\n  tvec[0] = -(dx || 0.0)\n  tvec[1] = -(dy || 0.0)\n  tvec[2] = -(dz || 0.0)\n  this.recalcMatrix(t)\n  var mat = this.computedInverse\n  translate(mat, mat, tvec)\n  this.setMatrix(t, invert44(mat, mat))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  tvec[0] = dx || 0.0\n  tvec[1] = dy || 0.0\n  tvec[2] = dz || 0.0\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  translate(mat, mat, tvec)\n  this.setMatrix(t, mat)\n}\n\nproto.setMatrix = function(t, mat) {\n  if(t < this.lastT()) {\n    return\n  }\n  this._time.push(t)\n  for(var i=0; i<16; ++i) {\n    this._components.push(mat[i])\n  }\n}\n\nproto.setDistance = function(t, d) {\n  this.computedRadius[0] = d\n}\n\nproto.setDistanceLimits = function(a,b) {\n  var lim = this._limits\n  lim[0] = a\n  lim[1] = b\n}\n\nproto.getDistanceLimits = function(out) {\n  var lim = this._limits\n  if(out) {\n    out[0] = lim[0]\n    out[1] = lim[1]\n    return out\n  }\n  return lim\n}\n\nfunction createMatrixCameraController(options) {\n  options = options || {}\n  var matrix = options.matrix || \n              [1,0,0,0,\n               0,1,0,0,\n               0,0,1,0,\n               0,0,0,1]\n  return new MatrixCameraController(matrix)\n}\n","'use strict'\n\nmodule.exports = mouseListen\n\nvar mouse = require('mouse-event')\n\nfunction mouseListen (element, callback) {\n  if (!callback) {\n    callback = element\n    element = window\n  }\n\n  var buttonState = 0\n  var x = 0\n  var y = 0\n  var mods = {\n    shift: false,\n    alt: false,\n    control: false,\n    meta: false\n  }\n  var attached = false\n\n  function updateMods (ev) {\n    var changed = false\n    if ('altKey' in ev) {\n      changed = changed || ev.altKey !== mods.alt\n      mods.alt = !!ev.altKey\n    }\n    if ('shiftKey' in ev) {\n      changed = changed || ev.shiftKey !== mods.shift\n      mods.shift = !!ev.shiftKey\n    }\n    if ('ctrlKey' in ev) {\n      changed = changed || ev.ctrlKey !== mods.control\n      mods.control = !!ev.ctrlKey\n    }\n    if ('metaKey' in ev) {\n      changed = changed || ev.metaKey !== mods.meta\n      mods.meta = !!ev.metaKey\n    }\n    return changed\n  }\n\n  function handleEvent (nextButtons, ev) {\n    var nextX = mouse.x(ev)\n    var nextY = mouse.y(ev)\n    if ('buttons' in ev) {\n      nextButtons = ev.buttons | 0\n    }\n    if (nextButtons !== buttonState ||\n      nextX !== x ||\n      nextY !== y ||\n      updateMods(ev)) {\n      buttonState = nextButtons | 0\n      x = nextX || 0\n      y = nextY || 0\n      callback && callback(buttonState, x, y, mods)\n    }\n  }\n\n  function clearState (ev) {\n    handleEvent(0, ev)\n  }\n\n  function handleBlur () {\n    if (buttonState ||\n      x ||\n      y ||\n      mods.shift ||\n      mods.alt ||\n      mods.meta ||\n      mods.control) {\n      x = y = 0\n      buttonState = 0\n      mods.shift = mods.alt = mods.control = mods.meta = false\n      callback && callback(0, 0, 0, mods)\n    }\n  }\n\n  function handleMods (ev) {\n    if (updateMods(ev)) {\n      callback && callback(buttonState, x, y, mods)\n    }\n  }\n\n  function handleMouseMove (ev) {\n    if (mouse.buttons(ev) === 0) {\n      handleEvent(0, ev)\n    } else {\n      handleEvent(buttonState, ev)\n    }\n  }\n\n  function handleMouseDown (ev) {\n    handleEvent(buttonState | mouse.buttons(ev), ev)\n  }\n\n  function handleMouseUp (ev) {\n    handleEvent(buttonState & ~mouse.buttons(ev), ev)\n  }\n\n  function attachListeners () {\n    if (attached) {\n      return\n    }\n    attached = true\n\n    element.addEventListener('mousemove', handleMouseMove)\n\n    element.addEventListener('mousedown', handleMouseDown)\n\n    element.addEventListener('mouseup', handleMouseUp)\n\n    element.addEventListener('mouseleave', clearState)\n    element.addEventListener('mouseenter', clearState)\n    element.addEventListener('mouseout', clearState)\n    element.addEventListener('mouseover', clearState)\n\n    element.addEventListener('blur', handleBlur)\n\n    element.addEventListener('keyup', handleMods)\n    element.addEventListener('keydown', handleMods)\n    element.addEventListener('keypress', handleMods)\n\n    if (element !== window) {\n      window.addEventListener('blur', handleBlur)\n\n      window.addEventListener('keyup', handleMods)\n      window.addEventListener('keydown', handleMods)\n      window.addEventListener('keypress', handleMods)\n    }\n  }\n\n  function detachListeners () {\n    if (!attached) {\n      return\n    }\n    attached = false\n\n    element.removeEventListener('mousemove', handleMouseMove)\n\n    element.removeEventListener('mousedown', handleMouseDown)\n\n    element.removeEventListener('mouseup', handleMouseUp)\n\n    element.removeEventListener('mouseleave', clearState)\n    element.removeEventListener('mouseenter', clearState)\n    element.removeEventListener('mouseout', clearState)\n    element.removeEventListener('mouseover', clearState)\n\n    element.removeEventListener('blur', handleBlur)\n\n    element.removeEventListener('keyup', handleMods)\n    element.removeEventListener('keydown', handleMods)\n    element.removeEventListener('keypress', handleMods)\n\n    if (element !== window) {\n      window.removeEventListener('blur', handleBlur)\n\n      window.removeEventListener('keyup', handleMods)\n      window.removeEventListener('keydown', handleMods)\n      window.removeEventListener('keypress', handleMods)\n    }\n  }\n\n  // Attach listeners\n  attachListeners()\n\n  var result = {\n    element: element\n  }\n\n  Object.defineProperties(result, {\n    enabled: {\n      get: function () { return attached },\n      set: function (f) {\n        if (f) {\n          attachListeners()\n        } else {\n          detachListeners()\n        }\n      },\n      enumerable: true\n    },\n    buttons: {\n      get: function () { return buttonState },\n      enumerable: true\n    },\n    x: {\n      get: function () { return x },\n      enumerable: true\n    },\n    y: {\n      get: function () { return y },\n      enumerable: true\n    },\n    mods: {\n      get: function () { return mods },\n      enumerable: true\n    }\n  })\n\n  return result\n}\n","var rootPosition = { left: 0, top: 0 }\n\nmodule.exports = mouseEventOffset\nfunction mouseEventOffset (ev, target, out) {\n  target = target || ev.currentTarget || ev.srcElement\n  if (!Array.isArray(out)) {\n    out = [ 0, 0 ]\n  }\n  var cx = ev.clientX || 0\n  var cy = ev.clientY || 0\n  var rect = getBoundingClientOffset(target)\n  out[0] = cx - rect.left\n  out[1] = cy - rect.top\n  return out\n}\n\nfunction getBoundingClientOffset (element) {\n  if (element === window ||\n      element === document ||\n      element === document.body) {\n    return rootPosition\n  } else {\n    return element.getBoundingClientRect()\n  }\n}\n","'use strict'\n\nfunction mouseButtons(ev) {\n  if(typeof ev === 'object') {\n    if('buttons' in ev) {\n      return ev.buttons\n    } else if('which' in ev) {\n      var b = ev.which\n      if(b === 2) {\n        return 4\n      } else if(b === 3) {\n        return 2\n      } else if(b > 0) {\n        return 1<<(b-1)\n      }\n    } else if('button' in ev) {\n      var b = ev.button\n      if(b === 1) {\n        return 4\n      } else if(b === 2) {\n        return 2\n      } else if(b >= 0) {\n        return 1<<b\n      }\n    }\n  }\n  return 0\n}\nexports.buttons = mouseButtons\n\nfunction mouseElement(ev) {\n  return ev.target || ev.srcElement || window\n}\nexports.element = mouseElement\n\nfunction mouseRelativeX(ev) {\n  if(typeof ev === 'object') {\n    if('offsetX' in ev) {\n      return ev.offsetX\n    }\n    var target = mouseElement(ev)\n    var bounds = target.getBoundingClientRect()\n    return ev.clientX - bounds.left\n  }\n  return 0\n}\nexports.x = mouseRelativeX\n\nfunction mouseRelativeY(ev) {\n  if(typeof ev === 'object') {\n    if('offsetY' in ev) {\n      return ev.offsetY\n    }\n    var target = mouseElement(ev)\n    var bounds = target.getBoundingClientRect()\n    return ev.clientY - bounds.top\n  }\n  return 0\n}\nexports.y = mouseRelativeY\n","'use strict'\n\nvar toPX = require('to-px')\n\nmodule.exports = mouseWheelListen\n\nfunction mouseWheelListen(element, callback, noScroll) {\n  if(typeof element === 'function') {\n    noScroll = !!callback\n    callback = element\n    element = window\n  }\n  var lineHeight = toPX('ex', element)\n  var listener = function(ev) {\n    if(noScroll) {\n      ev.preventDefault()\n    }\n    var dx = ev.deltaX || 0\n    var dy = ev.deltaY || 0\n    var dz = ev.deltaZ || 0\n    var mode = ev.deltaMode\n    var scale = 1\n    switch(mode) {\n      case 1:\n        scale = lineHeight\n      break\n      case 2:\n        scale = window.innerHeight\n      break\n    }\n    dx *= scale\n    dy *= scale\n    dz *= scale\n    if(dx || dy || dz) {\n      return callback(dx, dy, dz, ev)\n    }\n  }\n  element.addEventListener('wheel', listener)\n  return listener\n}\n","'use strict'\n\nmodule.exports = quatFromFrame\n\nfunction quatFromFrame(\n  out,\n  rx, ry, rz,\n  ux, uy, uz,\n  fx, fy, fz) {\n  var tr = rx + uy + fz\n  if(l > 0) {\n    var l = Math.sqrt(tr + 1.0)\n    out[0] = 0.5 * (uz - fy) / l\n    out[1] = 0.5 * (fx - rz) / l\n    out[2] = 0.5 * (ry - uy) / l\n    out[3] = 0.5 * l\n  } else {\n    var tf = Math.max(rx, uy, fz)\n    var l = Math.sqrt(2 * tf - tr + 1.0)\n    if(rx >= tf) {\n      //x y z  order\n      out[0] = 0.5 * l\n      out[1] = 0.5 * (ux + ry) / l\n      out[2] = 0.5 * (fx + rz) / l\n      out[3] = 0.5 * (uz - fy) / l\n    } else if(uy >= tf) {\n      //y z x  order\n      out[0] = 0.5 * (ry + ux) / l\n      out[1] = 0.5 * l\n      out[2] = 0.5 * (fy + uz) / l\n      out[3] = 0.5 * (fx - rz) / l\n    } else {\n      //z x y  order\n      out[0] = 0.5 * (rz + fx) / l\n      out[1] = 0.5 * (uz + fy) / l\n      out[2] = 0.5 * l\n      out[3] = 0.5 * (ry - ux) / l\n    }\n  }\n  return out\n}","'use strict'\n\nmodule.exports = createOrbitController\n\nvar filterVector  = require('filtered-vector')\nvar lookAt        = require('gl-mat4/lookAt')\nvar mat4FromQuat  = require('gl-mat4/fromQuat')\nvar invert44      = require('gl-mat4/invert')\nvar quatFromFrame = require('./lib/quatFromFrame')\n\nfunction len3(x,y,z) {\n  return Math.sqrt(Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction len4(w,x,y,z) {\n  return Math.sqrt(Math.pow(w,2) + Math.pow(x,2) + Math.pow(y,2) + Math.pow(z,2))\n}\n\nfunction normalize4(out, a) {\n  var ax = a[0]\n  var ay = a[1]\n  var az = a[2]\n  var aw = a[3]\n  var al = len4(ax, ay, az, aw)\n  if(al > 1e-6) {\n    out[0] = ax/al\n    out[1] = ay/al\n    out[2] = az/al\n    out[3] = aw/al\n  } else {\n    out[0] = out[1] = out[2] = 0.0\n    out[3] = 1.0\n  }\n}\n\nfunction OrbitCameraController(initQuat, initCenter, initRadius) {\n  this.radius    = filterVector([initRadius])\n  this.center    = filterVector(initCenter)\n  this.rotation  = filterVector(initQuat)\n\n  this.computedRadius   = this.radius.curve(0)\n  this.computedCenter   = this.center.curve(0)\n  this.computedRotation = this.rotation.curve(0)\n  this.computedUp       = [0.1,0,0]\n  this.computedEye      = [0.1,0,0]\n  this.computedMatrix   = [0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n  this.recalcMatrix(0)\n}\n\nvar proto = OrbitCameraController.prototype\n\nproto.lastT = function() {\n  return Math.max(\n    this.radius.lastT(),\n    this.center.lastT(),\n    this.rotation.lastT())\n}\n\nproto.recalcMatrix = function(t) {\n  this.radius.curve(t)\n  this.center.curve(t)\n  this.rotation.curve(t)\n\n  var quat = this.computedRotation\n  normalize4(quat, quat)\n\n  var mat = this.computedMatrix\n  mat4FromQuat(mat, quat)\n\n  var center = this.computedCenter\n  var eye    = this.computedEye\n  var up     = this.computedUp\n  var radius = Math.exp(this.computedRadius[0])\n\n  eye[0] = center[0] + radius * mat[2]\n  eye[1] = center[1] + radius * mat[6]\n  eye[2] = center[2] + radius * mat[10]\n  up[0] = mat[1]\n  up[1] = mat[5]\n  up[2] = mat[9]\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var m = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = m[i]\n    }\n    return result\n  }\n  return m\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.radius.idle(t)\n  this.rotation.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.radius.flush(t)\n  this.rotation.flush(t)\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var fx = mat[2]\n  var fy = mat[6]\n  var fz = mat[10]\n  var fu = fx * ux + fy * uy + fz * uz\n  var fr = fx * rx + fy * ry + fz * rz\n  fx -= fu * ux + fr * rx\n  fy -= fu * uy + fr * ry\n  fz -= fu * uz + fr * rz\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.rotate = function(t, dx, dy, dz) {\n  this.recalcMatrix(t)\n\n  dx = dx||0.0\n  dy = dy||0.0\n\n  var mat = this.computedMatrix\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n\n  var fx = mat[2]\n  var fy = mat[6]\n  var fz = mat[10]\n\n  var qx = dx * rx + dy * ux\n  var qy = dx * ry + dy * uy\n  var qz = dx * rz + dy * uz\n\n  var bx = -(fy * qz - fz * qy)\n  var by = -(fz * qx - fx * qz)\n  var bz = -(fx * qy - fy * qx)  \n  var bw = Math.sqrt(Math.max(0.0, 1.0 - Math.pow(bx,2) - Math.pow(by,2) - Math.pow(bz,2)))\n  var bl = len4(bx, by, bz, bw)\n  if(bl > 1e-6) {\n    bx /= bl\n    by /= bl\n    bz /= bl\n    bw /= bl\n  } else {\n    bx = by = bz = 0.0\n    bw = 1.0\n  }\n\n  var rotation = this.computedRotation\n  var ax = rotation[0]\n  var ay = rotation[1]\n  var az = rotation[2]\n  var aw = rotation[3]\n\n  var cx = ax*bw + aw*bx + ay*bz - az*by\n  var cy = ay*bw + aw*by + az*bx - ax*bz\n  var cz = az*bw + aw*bz + ax*by - ay*bx\n  var cw = aw*bw - ax*bx - ay*by - az*bz\n  \n  //Apply roll\n  if(dz) {\n    bx = fx\n    by = fy\n    bz = fz\n    var s = Math.sin(dz) / len3(bx, by, bz)\n    bx *= s\n    by *= s\n    bz *= s\n    bw = Math.cos(dx)\n    cx = cx*bw + cw*bx + cy*bz - cz*by\n    cy = cy*bw + cw*by + cz*bx - cx*bz\n    cz = cz*bw + cw*bz + cx*by - cy*bx\n    cw = cw*bw - cx*bx - cy*by - cz*bz\n  }\n\n  var cl = len4(cx, cy, cz, cw)\n  if(cl > 1e-6) {\n    cx /= cl\n    cy /= cl\n    cz /= cl\n    cw /= cl\n  } else {\n    cx = cy = cz = 0.0\n    cw = 1.0\n  }\n\n  this.rotation.set(t, cx, cy, cz, cw)\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  center = center || this.computedCenter\n  eye    = eye    || this.computedEye\n  up     = up     || this.computedUp\n\n  var mat = this.computedMatrix\n  lookAt(mat, eye, center, up)\n\n  var rotation = this.computedRotation\n  quatFromFrame(rotation,\n    mat[0], mat[1], mat[2],\n    mat[4], mat[5], mat[6],\n    mat[8], mat[9], mat[10])\n  normalize4(rotation, rotation)\n  this.rotation.set(t, rotation[0], rotation[1], rotation[2], rotation[3])\n\n  var fl = 0.0\n  for(var i=0; i<3; ++i) {\n    fl += Math.pow(center[i] - eye[i], 2)\n  }\n  this.radius.set(t, 0.5 * Math.log(Math.max(fl, 1e-6)))\n\n  this.center.set(t, center[0], center[1], center[2])\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\nproto.setMatrix = function(t, matrix) {\n\n  var rotation = this.computedRotation\n  quatFromFrame(rotation,\n    matrix[0], matrix[1], matrix[2],\n    matrix[4], matrix[5], matrix[6],\n    matrix[8], matrix[9], matrix[10])\n  normalize4(rotation, rotation)\n  this.rotation.set(t, rotation[0], rotation[1], rotation[2], rotation[3])\n\n  var mat = this.computedMatrix\n  invert44(mat, matrix)\n  var w = mat[15]\n  if(Math.abs(w) > 1e-6) {\n    var cx = mat[12]/w\n    var cy = mat[13]/w\n    var cz = mat[14]/w\n\n    this.recalcMatrix(t)  \n    var r = Math.exp(this.computedRadius[0])\n    this.center.set(t, cx-mat[2]*r, cy-mat[6]*r, cz-mat[10]*r)\n    this.radius.idle(t)\n  } else {\n    this.center.idle(t)\n    this.radius.idle(t)\n  }\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.setDistanceLimits = function(lo, hi) {\n  if(lo > 0) {\n    lo = Math.log(lo)\n  } else {\n    lo = -Infinity    \n  }\n  if(hi > 0) {\n    hi = Math.log(hi)\n  } else {\n    hi = Infinity\n  }\n  hi = Math.max(hi, lo)\n  this.radius.bounds[0][0] = lo\n  this.radius.bounds[1][0] = hi\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.toJSON = function() {\n  this.recalcMatrix(this.lastT())\n  return {\n    center:   this.computedCenter.slice(),\n    rotation: this.computedRotation.slice(),\n    distance: Math.log(this.computedRadius[0]),\n    zoomMin:  this.radius.bounds[0][0],\n    zoomMax:  this.radius.bounds[1][0]\n  }\n}\n\nproto.fromJSON = function(options) {\n  var t = this.lastT()\n  var c = options.center\n  if(c) {\n    this.center.set(t, c[0], c[1], c[2])\n  }\n  var r = options.rotation\n  if(r) {\n    this.rotation.set(t, r[0], r[1], r[2], r[3])\n  }\n  var d = options.distance\n  if(d && d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n  this.setDistanceLimits(options.zoomMin, options.zoomMax)\n}\n\nfunction createOrbitController(options) {\n  options = options || {}\n  var center   = options.center   || [0,0,0]\n  var rotation = options.rotation || [0,0,0,1]\n  var radius   = options.radius   || 1.0\n\n  center = [].slice.call(center, 0, 3)\n  rotation = [].slice.call(rotation, 0, 4)\n  normalize4(rotation, rotation)\n\n  var result = new OrbitCameraController(\n    rotation,\n    center,\n    Math.log(radius))\n\n  result.setDistanceLimits(options.zoomMin, options.zoomMax)\n\n  if('eye' in options || 'up' in options) {\n    result.lookAt(0, options.eye, options.center, options.up)\n  }\n\n  return result\n}","module.exports = function parseUnit(str, out) {\n    if (!out)\n        out = [ 0, '' ]\n\n    str = String(str)\n    var num = parseFloat(str, 10)\n    out[0] = num\n    out[1] = str.match(/[\\d.\\-\\+]*\\s*(.*)/)[1] || ''\n    return out\n}","module.exports = require('gl-quat/slerp')","module.exports =\n  global.performance &&\n  global.performance.now ? function now() {\n    return performance.now()\n  } : Date.now || function now() {\n    return +new Date\n  }\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = getSizeBrutal('in', document.body) // 96\n\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['height'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'height') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  if (!str) return null\n\n  element = element || document.body\n  str = (str + '' || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body\n  }\n\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n    case 'px':\n      return 1\n  }\n\n  // detect number of units\n  var parts = parseUnit(str)\n  if (!isNaN(parts[0]) && parts[1]) {\n    var px = toPX(parts[1], element)\n    return typeof px === 'number' ? parts[0] * px : null\n  }\n\n  return null\n}\n","import { vec3, mat4 } from 'gl-matrix';\r\nimport { createTransforms, createViewProjection } from './helpers';\r\nimport { defaultShader, lightShader } from './shaders';\r\n\r\nconst createCamera = require('3d-view-controls');\r\n\r\nexport interface RenderableData {\r\n  vertex: Float32Array;\r\n}\r\n\r\nexport abstract class RenderableObject {\r\n  renderer: Renderer;\r\n  data: RenderableData;\r\n\r\n  protected vertex: GPUBuffer;\r\n  protected pipeline: GPURenderPipeline;\r\n\r\n  protected vp: ReturnType<typeof createViewProjection>;\r\n  protected mvpMat: mat4;\r\n  protected modelMat: mat4;\r\n\r\n  private translation: vec3 = [0, 0, 0];\r\n  private rotation: vec3 = [0, 0, 0];\r\n  private scaling: vec3 = [1, 1, 1];\r\n\r\n  protected camera: ReturnType<typeof createCamera>;\r\n\r\n  constructor(renderer: Renderer, data: RenderableData) {\r\n    this.renderer = renderer;\r\n    this.data = data;\r\n\r\n    const { canvas } = this.renderer.options;\r\n    const { vertex } = this.data;\r\n\r\n    this.vertex = this.renderer.createVertexBuffer(vertex);\r\n    this.pipeline = this.createRenderPipeline();\r\n\r\n    this.vp = createViewProjection(canvas.width / canvas.height);\r\n    this.mvpMat = mat4.create();\r\n    this.modelMat = mat4.create();\r\n\r\n    this.camera = createCamera(canvas, this.vp.cameraOptions);\r\n  }\r\n\r\n  translate(translation: vec3) {\r\n    vec3.add(this.translation, this.translation, translation);\r\n    createTransforms(this.modelMat, this.translation, this.rotation, this.scaling);\r\n    return this;\r\n  }\r\n\r\n  rotate(rotation: vec3) {\r\n    vec3.add(this.rotation, this.rotation, rotation);\r\n    createTransforms(this.modelMat, this.translation, this.rotation, this.scaling);\r\n    return this;\r\n  }\r\n\r\n  scale(scaling: vec3) {\r\n    this.scaling[0] = scaling[0];\r\n    this.scaling[1] = scaling[2];\r\n    this.scaling[2] = scaling[2];\r\n    createTransforms(this.modelMat, this.translation, this.rotation, this.scaling);\r\n    return this;\r\n  }\r\n\r\n  abstract render(): void;\r\n  protected abstract createRenderPipeline(): GPURenderPipeline;\r\n}\r\n\r\nexport interface RendererOptions extends GPUCanvasConfiguration {\r\n  canvas: HTMLCanvasElement;\r\n}\r\n\r\nexport class Renderer {\r\n  context: GPUCanvasContext;\r\n  options: RendererOptions;\r\n\r\n  private queue: Set<RenderableObject> = new Set();\r\n\r\n  constructor(context: GPUCanvasContext, options: RendererOptions) {\r\n    this.context = context;\r\n    this.options = options;\r\n    this.context.configure(this.options);\r\n  }\r\n\r\n  add(...objects: RenderableObject[]) {\r\n    objects.forEach((object) => this.queue.add(object));\r\n    return this;\r\n  }\r\n\r\n  delete(...objects: RenderableObject[]) {\r\n    objects.forEach((object) => this.queue.delete(object));\r\n    return this;\r\n  }\r\n\r\n  render(isAnimation = true) {\r\n    this.queue.forEach((object) => {\r\n      object.render()\r\n      if (isAnimation) {\r\n        object.rotate([0.01, 0.01, 0.01]);\r\n      }\r\n    });\r\n    requestAnimationFrame(() => this.render(isAnimation));\r\n  }\r\n\r\n  createIndexBuffer(data: Uint32Array) {\r\n    const buffer = this.options.device.createBuffer({\r\n      size: data.byteLength,\r\n      usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\r\n      mappedAtCreation: true,\r\n    });\r\n\r\n    new Uint32Array(buffer.getMappedRange()).set(data);\r\n    buffer.unmap();\r\n\r\n    return buffer;\r\n  }\r\n\r\n  createVertexBuffer(data: Float32Array) {\r\n    const buffer = this.options.device.createBuffer({\r\n      size: data.byteLength,\r\n      usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\r\n      mappedAtCreation: true,\r\n    });\r\n\r\n    new Float32Array(buffer.getMappedRange()).set(data);\r\n    buffer.unmap();\r\n\r\n    return buffer;\r\n  }\r\n}\r\n\r\nexport class WireframeObject extends RenderableObject {  \r\n  protected uniform: GPUBuffer;\r\n  protected bindGroup: GPUBindGroup;\r\n\r\n  constructor(renderer: Renderer, data: RenderableData) {\r\n    super(renderer, data);\r\n\r\n    const { device } = this.renderer.options;\r\n\r\n    this.uniform = device.createBuffer({\r\n      size: 64,\r\n      usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n    });\r\n    this.bindGroup = device.createBindGroup({\r\n      layout: this.pipeline.getBindGroupLayout(0),\r\n      entries: [{\r\n        binding: 0,\r\n        resource: {\r\n          buffer: this.uniform,\r\n          offset: 0,\r\n          size: 64,\r\n        },\r\n      }],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { device } = this.renderer.options;\r\n    const commandEncoder = device.createCommandEncoder();\r\n    const encoder = commandEncoder.beginRenderPass({\r\n      colorAttachments: [{\r\n        view: this.renderer.context.getCurrentTexture().createView(),\r\n        loadValue: 'load',\r\n        storeOp: 'store',\r\n      }],\r\n    });\r\n\r\n    if (this.camera.tick()) {\r\n      mat4.mul(this.vp.viewProjectionMat, this.vp.projectionMat, this.camera.matrix);\r\n    }\r\n    mat4.mul(this.mvpMat, this.vp.viewProjectionMat, this.modelMat);\r\n    device.queue.writeBuffer(this.uniform, 0, this.mvpMat as ArrayBuffer);\r\n\r\n    encoder.setPipeline(this.pipeline);\r\n    encoder.setVertexBuffer(0, this.vertex);\r\n    encoder.setBindGroup(0, this.bindGroup);\r\n    encoder.draw(this.data.vertex.length / 3);\r\n    encoder.endPass();\r\n\r\n    device.queue.submit([commandEncoder.finish()]);\r\n  }\r\n\r\n  createRenderPipeline() {\r\n    const { device, format } = this.renderer.options;\r\n    const { vertex, fragment } = defaultShader;\r\n\r\n    return device.createRenderPipeline({\r\n      vertex: {\r\n        module: device.createShaderModule(vertex),\r\n        entryPoint: 'main',\r\n        buffers: [{\r\n          arrayStride: 12,\r\n          attributes: [{\r\n            shaderLocation: 0,\r\n            format: 'float32x3',\r\n            offset: 0,\r\n          }],\r\n        }],\r\n      },\r\n      fragment: {\r\n        module: device.createShaderModule(fragment),\r\n        entryPoint: 'main',\r\n        targets: [{ format }],\r\n      },\r\n      primitive: {\r\n        topology: 'line-list',\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport interface LightData extends RenderableData {\r\n  normal: Float32Array;\r\n}\r\n\r\nexport class LightObject extends RenderableObject {\r\n  protected texture: GPUTexture;\r\n  protected normal: GPUBuffer;\r\n\r\n  protected normalMat: mat4;\r\n\r\n  protected vertexUniform: GPUBuffer;\r\n  protected fragmentUniform: GPUBuffer;\r\n  protected bindGroup: GPUBindGroup;\r\n\r\n  constructor(renderer: Renderer, data: LightData) {\r\n    super(renderer, data);\r\n    \r\n    const { device, size } = this.renderer.options;\r\n\r\n    this.texture = device.createTexture({\r\n      size: size as GPUExtent3D,\r\n      format: 'depth24plus',\r\n      usage: GPUTextureUsage.RENDER_ATTACHMENT,\r\n    });\r\n    this.normal = this.renderer.createVertexBuffer(data.normal);\r\n    this.normalMat = mat4.create();\r\n\r\n    this.vertexUniform = device.createBuffer({\r\n      size: 192,\r\n      usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n    });\r\n    this.fragmentUniform = device.createBuffer({\r\n      size: 32,\r\n      usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\r\n    });\r\n    this.bindGroup = device.createBindGroup({\r\n      layout: this.pipeline.getBindGroupLayout(0),\r\n      entries: [{\r\n        binding: 0,\r\n        resource: {\r\n          buffer: this.vertexUniform,\r\n          offset: 0,\r\n          size: 192,\r\n        },\r\n      }, {\r\n        binding: 1,\r\n        resource: {\r\n          buffer: this.fragmentUniform,\r\n          offset: 0,\r\n          size: 32,\r\n        },\r\n      }],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { device } = this.renderer.options;\r\n    const commandEncoder = device.createCommandEncoder();\r\n    const encoder = commandEncoder.beginRenderPass({\r\n      colorAttachments: [{\r\n        view: this.renderer.context.getCurrentTexture().createView(),\r\n        loadValue: 'load',\r\n        storeOp: 'store',\r\n      }],\r\n      depthStencilAttachment: {\r\n        view: this.texture.createView(),\r\n        depthLoadValue: 1.0,\r\n        depthStoreOp: 'store',\r\n        stencilLoadValue: 0,\r\n        stencilStoreOp: 'store',\r\n      },\r\n    });\r\n\r\n    if (this.camera.tick()) {\r\n      const eyePosition = new Float32Array(this.camera.eye.flat());\r\n      const lightPosition = eyePosition;\r\n\r\n      mat4.mul(this.vp.viewProjectionMat, this.vp.projectionMat, this.camera.matrix);\r\n      device.queue.writeBuffer(this.vertexUniform, 0, this.vp.viewProjectionMat as ArrayBuffer);\r\n      device.queue.writeBuffer(this.fragmentUniform, 0, eyePosition);\r\n      device.queue.writeBuffer(this.fragmentUniform, 16, lightPosition);\r\n    }\r\n    mat4.invert(this.normalMat, this.modelMat);\r\n    mat4.transpose(this.normalMat, this.normalMat);\r\n    device.queue.writeBuffer(this.vertexUniform, 64, this.modelMat as ArrayBuffer);\r\n    device.queue.writeBuffer(this.vertexUniform, 128, this.normalMat as ArrayBuffer);\r\n\r\n    encoder.setPipeline(this.pipeline);\r\n    encoder.setVertexBuffer(0, this.vertex);\r\n    encoder.setVertexBuffer(1, this.normal);\r\n    encoder.setBindGroup(0, this.bindGroup);\r\n    encoder.draw(this.data.vertex.length / 3);\r\n    encoder.endPass();\r\n\r\n    device.queue.submit([commandEncoder.finish()]);\r\n  }\r\n\r\n  createRenderPipeline() {\r\n    const { device, format } = this.renderer.options;\r\n    const { vertex, fragment } = lightShader;\r\n\r\n    return device.createRenderPipeline({\r\n      vertex: {\r\n        module: device.createShaderModule(vertex),\r\n        entryPoint: 'main',\r\n        buffers: [{\r\n          arrayStride: 12,\r\n          attributes: [{\r\n            shaderLocation: 0,\r\n            format: 'float32x3',\r\n            offset: 0,\r\n          }, {\r\n            shaderLocation: 1,\r\n            format: 'float32x3',\r\n            offset: 0,\r\n          }],\r\n        }],\r\n      },\r\n      fragment: {\r\n        module: device.createShaderModule(fragment),\r\n        entryPoint: 'main',\r\n        targets: [{ format }],\r\n      },\r\n      primitive: {\r\n        topology: 'triangle-list',\r\n      },\r\n      depthStencil: {\r\n        depthWriteEnabled: true,\r\n        depthCompare: 'less',\r\n        format: 'depth24plus',\r\n      },\r\n    });\r\n  }\r\n}","import { vec3, mat4 } from 'gl-matrix';\r\n\r\nexport const createTransforms = (\r\n  modelMat: mat4,\r\n  translation: vec3 = [0, 0, 0],\r\n  rotation: vec3 = [0, 0, 0],\r\n  scaling: vec3 = [1, 1, 1],\r\n) => {\r\n  const rotateXMat = mat4.create();\r\n  const rotateYMat = mat4.create();\r\n  const rotateZMat = mat4.create();\r\n  const translateMat = mat4.create();\r\n  const scaleMat = mat4.create();\r\n\r\n  mat4.fromTranslation(translateMat, translation);\r\n  mat4.fromXRotation(rotateXMat, rotation[0]);\r\n  mat4.fromYRotation(rotateYMat, rotation[1]);\r\n  mat4.fromZRotation(rotateZMat, rotation[2]);\r\n  mat4.fromScaling(scaleMat, scaling);\r\n\r\n  mat4.mul(modelMat, rotateXMat, scaleMat);\r\n  mat4.mul(modelMat, rotateYMat, modelMat);\r\n  mat4.mul(modelMat, rotateZMat, modelMat);\r\n  mat4.mul(modelMat, translateMat, modelMat);\r\n};\r\n\r\nexport const createViewProjection = (\r\n  aspect = 1.0,\r\n  cameraPosition: vec3 = [2, 2, 4],\r\n  center: vec3 = [0, 0, 0],\r\n  up: vec3 = [0, 1, 0],\r\n) => {\r\n  const viewMat = mat4.create();\r\n  const projectionMat = mat4.create();\r\n  const viewProjectionMat = mat4.create();\r\n\r\n  mat4.perspective(projectionMat, 2 * Math.PI / 5, aspect, 0.1, 100.0);\r\n  mat4.lookAt(viewMat, cameraPosition, center, up);\r\n  mat4.mul(viewProjectionMat, projectionMat, viewMat);\r\n\r\n  return {\r\n    viewMat,\r\n    projectionMat,\r\n    viewProjectionMat,\r\n    cameraOptions: {\r\n      eye: cameraPosition,\r\n      center,\r\n      zoomMax: 100,\r\n      zoomSpeed: 2,\r\n    },\r\n  };\r\n};","import { vec3 } from 'gl-matrix';\r\nimport { Renderer, WireframeObject, LightObject } from '../classes';\r\n\r\nexport interface CubeOptions {\r\n  width?: number;\r\n  height?: number;\r\n  center?: vec3;\r\n}\r\n\r\nexport const buildWireframeData = (options: CubeOptions = {}) => {\r\n  const { width = 2.4, height = 2.4, center = [0, 0, 0] } = options;\r\n  if (width <= 0 || height <= 0) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const w = width / 2, h = height / 2;\r\n  const p0 = [center[0] - w, center[1] + h, center[2] + w];\r\n  const p1 = [center[0] + w, center[1] + h, center[2] + w];\r\n  const p2 = [center[0] + w, center[1] + h, center[2] - w];\r\n  const p3 = [center[0] - w, center[1] + h, center[2] - w];\r\n  const p4 = [center[0] - w, center[1] - h, center[2] + w];\r\n  const p5 = [center[0] + w, center[1] - h, center[2] + w];\r\n  const p6 = [center[0] + w, center[1] - h, center[2] - w];\r\n  const p7 = [center[0] - w, center[1] - h, center[2] - w];\r\n  const ps = [\r\n    ...p0, ...p1, ...p1, ...p2, ...p2, ...p3, ...p3, ...p0,\r\n    ...p4, ...p5, ...p5, ...p6, ...p6, ...p7, ...p7, ...p4,\r\n    ...p0, ...p4, ...p1, ...p5, ...p2, ...p6, ...p3, ...p7,\r\n  ];\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n  };\r\n};\r\n\r\nexport class CubeWireframe extends WireframeObject {\r\n  constructor(renderer: Renderer, options?: CubeOptions) {\r\n    super(renderer, buildWireframeData(options));\r\n  }\r\n}\r\n\r\nexport const buildData = (options: CubeOptions = {}) => {\r\n  const { width = 2.4, height = 2.4, center = [0, 0, 0] } = options;\r\n  if (width <= 0 || height <= 0) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n      normal: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const w = width / 2, h = height / 2;\r\n  const p0 = [center[0] - w, center[1] + h, center[2] + w];\r\n  const p1 = [center[0] + w, center[1] + h, center[2] + w];\r\n  const p2 = [center[0] + w, center[1] + h, center[2] - w];\r\n  const p3 = [center[0] - w, center[1] + h, center[2] - w];\r\n  const p4 = [center[0] - w, center[1] - h, center[2] + w];\r\n  const p5 = [center[0] + w, center[1] - h, center[2] + w];\r\n  const p6 = [center[0] + w, center[1] - h, center[2] - w];\r\n  const p7 = [center[0] - w, center[1] - h, center[2] - w];\r\n  const ps = [\r\n    ...p0, ...p1, ...p3, ...p3, ...p1, ...p2,\r\n    ...p4, ...p5, ...p7, ...p7, ...p5, ...p6,\r\n    ...p7, ...p4, ...p3, ...p3, ...p4, ...p0,\r\n    ...p5, ...p6, ...p1, ...p1, ...p6, ...p2,\r\n    ...p4, ...p5, ...p0, ...p0, ...p5, ...p1,\r\n    ...p7, ...p6, ...p3, ...p3, ...p6, ...p2,\r\n  ];\r\n  const ns = [\r\n    0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\r\n    0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0,\r\n    -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\r\n    1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\r\n    0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\r\n    0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1,\r\n  ];\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n    normal: new Float32Array(ns),\r\n  };\r\n};\r\n\r\nexport class Cube extends LightObject {\r\n  constructor(renderer: Renderer, options?: CubeOptions) {\r\n    super(renderer, buildData(options));\r\n  }\r\n}","import { vec3 } from 'gl-matrix';\r\nimport { Renderer, WireframeObject, LightObject } from '../classes';\r\n\r\nexport interface CylinderOptions {\r\n  rin?: number;\r\n  rout?: number;\r\n  height?: number;\r\n  n?: number;\r\n  center?: vec3;\r\n}\r\n\r\nconst compute = (radius: number, theta: number, y: number, center: vec3 = [0, 0, 0]) => {\r\n  const snt = Math.sin(theta * Math.PI / 180);\r\n  const cnt = Math.cos(theta * Math.PI / 180);\r\n  return vec3.fromValues(center[0] + radius * cnt, center[1] + y, center[2] - radius * snt);\r\n};\r\n\r\nexport const buildWireframeData = (options: CylinderOptions = {}) => {\r\n  const { rin = 0.8, rout = 1.5, height = 3, n = 60, center } = options;\r\n  if (n < 3 || rin >= rout) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const pts = [];\r\n  const h = height / 2;\r\n  for (let i = 0; i < n; i++) {\r\n    pts.push([\r\n      compute(rout, i * 360/(n-1), h, center),\r\n      compute(rout, i * 360/(n-1), -h, center),\r\n      compute(rin, i * 360/(n-1), -h, center),\r\n      compute(rin, i * 360/(n-1), h, center),\r\n    ]);\r\n  }\r\n\r\n  const ps = [];\r\n  let p0, p1, p2, p3, p4, p5, p6, p7;\r\n  for (let i = 0; i < n-1; i++) {\r\n    p0 = pts[i][0];\r\n    p1 = pts[i][1];\r\n    p2 = pts[i][2];\r\n    p3 = pts[i][3];\r\n    p4 = pts[i+1][0];\r\n    p5 = pts[i+1][1];\r\n    p6 = pts[i+1][2];\r\n    p7 = pts[i+1][3];\r\n    ps.push(\r\n      ...p0, ...p3, ...p3, ...p7, ...p4, ...p0,\r\n      ...p1, ...p2, ...p2, ...p6, ...p5, ...p1,\r\n      ...p0, ...p1, ...p3, ...p2,\r\n    );\r\n  }\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n  };\r\n};\r\n\r\nexport class CylinderWireframe extends WireframeObject {\r\n  constructor(renderer: Renderer, options?: CylinderOptions) {\r\n    super(renderer, buildWireframeData(options));\r\n  }\r\n}\r\n\r\nexport const buildData = (options: CylinderOptions = {}) => {\r\n  const { rin = 0.8, rout = 1.5, height = 3, n = 60, center } = options;\r\n  if (n < 3 || rin >= rout) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n      normal: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const pts = [];\r\n  const h = height / 2;\r\n  for (let i = 0; i < n; i++) {\r\n    pts.push([\r\n      compute(rout, i * 360/(n-1), h, center),\r\n      compute(rout, i * 360/(n-1), -h, center),\r\n      compute(rin, i * 360/(n-1), -h, center),\r\n      compute(rin, i * 360/(n-1), h, center),\r\n    ]);\r\n  }\r\n\r\n  const ps = [], ns = [];\r\n  let p0, p1, p2, p3, p4, p5, p6, p7;\r\n  for (let i = 0; i < n-1; i++) {\r\n    p0 = pts[i][0];\r\n    p1 = pts[i][1];\r\n    p2 = pts[i][2];\r\n    p3 = pts[i][3];\r\n    p4 = pts[i+1][0];\r\n    p5 = pts[i+1][1];\r\n    p6 = pts[i+1][2];\r\n    p7 = pts[i+1][3];\r\n    ps.push(\r\n      ...p0, ...p4, ...p7, ...p7, ...p3, ...p0,\r\n      ...p1, ...p2, ...p6, ...p6, ...p5, ...p1,\r\n      ...p0, ...p1, ...p5, ...p5, ...p4, ...p0,\r\n      ...p2, ...p3, ...p7, ...p7, ...p6, ...p2,\r\n    );\r\n    ns.push(\r\n      0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\r\n      0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0,\r\n      p0[0] / rout, 0, p0[2] / rout, p1[0] / rout, 0, p1[2] / rout, p5[0] / rout, 0, p5[2] / rout,\r\n      p5[0] / rout, 0, p5[2] / rout, p4[0] / rout, 0, p4[2] / rout, p0[0] / rout, 0, p0[2] / rout,\r\n      p3[0] / rout, 0, p3[2] / rout, p7[0] / rout, 0, p7[2] / rout, p6[0] / rout, 0, p6[2] / rout,\r\n      p6[0] / rout, 0, p6[2] / rout, p2[0] / rout, 0, p2[2] / rout, p3[0] / rout, 0, p3[2] / rout,\r\n    );\r\n  }\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n    normal: new Float32Array(ns),\r\n  };\r\n};\r\n\r\nexport class Cylinder extends LightObject {\r\n  constructor(renderer: Renderer, options?: CylinderOptions) {\r\n    super(renderer, buildData(options));\r\n  }\r\n}","import { CubeWireframe, Cube } from './cube';\r\nimport { SphereWireframe, Sphere } from './sphere';\r\nimport { CylinderWireframe, Cylinder } from './cylinder';\r\nimport { TorusWireframe, Torus } from './torus';\r\n\r\nexport {\r\n  CubeWireframe,\r\n  Cube,\r\n  SphereWireframe,\r\n  Sphere,\r\n  CylinderWireframe,\r\n  Cylinder,\r\n  TorusWireframe,\r\n  Torus,\r\n};","import { vec3 } from 'gl-matrix';\r\nimport { Renderer, WireframeObject, LightObject } from '../classes';\r\n\r\nexport interface SphereOptions {\r\n  radius?: number;\r\n  u?: number;\r\n  v?: number;\r\n  center?: vec3;\r\n}\r\n\r\nconst compute = (radius: number, theta: number, phi: number, center: vec3 = [0, 0, 0]) => {\r\n  const snt = Math.sin(theta * Math.PI);\r\n  const cnt = Math.cos(theta * Math.PI);\r\n  const snp = Math.sin(phi * Math.PI * 2);\r\n  const cnp = Math.cos(phi * Math.PI * 2);\r\n  return vec3.fromValues(center[0] + radius * snt * cnp, center[1] + radius * cnt, center[2] + radius * snt * snp);\r\n};\r\n\r\nexport const buildWireframeData = (options: SphereOptions = {}) => {\r\n  const { radius = 2, u = 50, v = 30, center } = options;\r\n  if (u < 3 || v < 3) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const pts = [];\r\n  for (let i = 0; i < u; i++) {\r\n    const pt1: vec3[] = [];\r\n    for (let j = 0; j < v; j++) {\r\n      pt1.push(compute(radius, i / (u - 1), j / (v - 1), center));\r\n    }\r\n    pts.push(pt1);\r\n  }\r\n\r\n  const ps = [];\r\n  let p0, p1, p2, p3;\r\n  for (let i = 0; i < u - 1; i++) {\r\n    for (let j = 0; j < v - 1; j++) {\r\n      p0 = pts[i][j];\r\n      p1 = pts[i + 1][j];\r\n      p2 = pts[i][j + 1];\r\n      p3 = pts[i + 1][j + 1];\r\n      ps.push(...p0, ...p1, ...p0, ...p2);\r\n    }\r\n  }\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n  };\r\n};\r\n\r\nexport class SphereWireframe extends WireframeObject {\r\n  constructor(renderer: Renderer, options?: SphereOptions) {\r\n    super(renderer, buildWireframeData(options));\r\n  }\r\n}\r\n\r\nexport const buildData = (options: SphereOptions = {}) => {\r\n  const { radius = 2, u = 60, v = 40, center } = options;\r\n  if (u < 3 || v < 3) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n      normal: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const pts = [];\r\n  for (let i = 0; i < u; i++) {\r\n    const pt1: vec3[] = [];\r\n    for (let j = 0; j < v; j++) {\r\n      pt1.push(compute(radius, i / (u - 1), j / (v - 1), center));\r\n    }\r\n    pts.push(pt1);\r\n  }\r\n\r\n  const ps = [], ns = [];\r\n  let p0, p1, p2, p3;\r\n  for (let i = 0; i < u - 1; i++) {\r\n    for (let j = 0; j < v - 1; j++) {\r\n      p0 = pts[i][j];\r\n      p1 = pts[i + 1][j];\r\n      p2 = pts[i][j + 1];\r\n      p3 = pts[i + 1][j + 1];\r\n      ps.push(...p0, ...p1, ...p2, ...p2, ...p1, ...p3);\r\n      ns.push(\r\n        p0[0] / radius, p0[1] / radius, p0[2] / radius,\r\n        p1[0] / radius, p1[1] / radius, p1[2] / radius,\r\n        p2[0] / radius, p2[1] / radius, p2[2] / radius,\r\n        p2[0] / radius, p2[1] / radius, p2[2] / radius,\r\n        p1[0] / radius, p1[1] / radius, p1[2] / radius,\r\n        p3[0] / radius, p3[1] / radius, p3[2] / radius,\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n    normal: new Float32Array(ns),\r\n  };\r\n};\r\n\r\nexport class Sphere extends LightObject {\r\n  constructor(renderer: Renderer, options?: SphereOptions) {\r\n    super(renderer, buildData(options));\r\n  }\r\n}","import { vec3 } from 'gl-matrix';\r\nimport { Renderer, WireframeObject, LightObject } from '../classes';\r\n\r\nexport interface TorusOptions {\r\n  radius?: number;\r\n  r?: number;\r\n  u?: number;\r\n  v?: number;\r\n  center?: vec3;\r\n}\r\n\r\nconst compute = (radius: number, r: number, theta: number, phi: number, center: vec3 = [0, 0, 0]) => {\r\n  const snt = Math.sin(theta * Math.PI * 2);\r\n  const cnt = Math.cos(theta * Math.PI * 2);\r\n  const snp = Math.sin(phi * Math.PI * 2);\r\n  const cnp = Math.cos(phi * Math.PI * 2);\r\n  return vec3.fromValues(center[0] + radius * cnt + r * cnp * cnt, center[1] + r * snp, center[2] + radius * snt + r * cnp * snt);\r\n};\r\n\r\nexport const buildWireframeData = (options: TorusOptions = {}) => {\r\n  const { radius = 1.5, r = 0.5, u = 50, v = 30, center } = options;\r\n  if (u < 4 || v < 4 || r >= radius) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const pts = [];\r\n  for (let i = 0; i < u; i++) {\r\n    const pt1: vec3[] = [];\r\n    for (let j = 0; j < v; j++) {\r\n      pt1.push(compute(radius, r, i / (u - 1), j / (v - 1), center));\r\n    }\r\n    pts.push(pt1);\r\n  }\r\n\r\n  const ps = [];\r\n  let p0, p1, p2;\r\n  for (let i = 0; i < u - 1; i++) {\r\n    for (let j = 0; j < v - 1; j++) {\r\n      p0 = pts[i][j];\r\n      p1 = pts[i][j + 1];\r\n      p2 = pts[i + 1][j];\r\n      ps.push(...p0, ...p1, ...p0, ...p2);\r\n    }\r\n  }\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n  };\r\n};\r\n\r\nexport class TorusWireframe extends WireframeObject {\r\n  constructor(renderer: Renderer, options?: TorusOptions) {\r\n    super(renderer, buildWireframeData(options));\r\n  }\r\n}\r\n\r\nexport const buildData = (options: TorusOptions = {}) => {\r\n  const { radius = 1.5, r = 0.5, u = 50, v = 30, center } = options;\r\n  if (u < 4 || v < 4 || r >= radius) {\r\n    return {\r\n      vertex: new Float32Array(),\r\n      normal: new Float32Array(),\r\n    };\r\n  }\r\n\r\n  const pts = [];\r\n  for (let i = 0; i < u; i++) {\r\n    const pt1: vec3[] = [];\r\n    for (let j = 0; j < v; j++) {\r\n      pt1.push(compute(radius, r, i / (u - 1), j / (v - 1), center));\r\n    }\r\n    pts.push(pt1);\r\n  }\r\n\r\n  const ps = [], ns = [];\r\n  let p0, p1, p2, p3;\r\n  let ca: vec3, db: vec3, cp: vec3;\r\n  for (let i = 0; i < u - 1; i++) {\r\n    for (let j = 0; j < v - 1; j++) {\r\n      p0 = pts[i][j];\r\n      p1 = pts[i][j + 1];\r\n      p2 = pts[i + 1][j];\r\n      p3 = pts[i + 1][j + 1];\r\n      ps.push(...p0, ...p1, ...p2, ...p2, ...p1, ...p3);\r\n      ca = vec3.sub(vec3.create(), p2, p1);\r\n      db = vec3.sub(vec3.create(), p3, p0);\r\n      cp = vec3.cross(vec3.create(), ca, db);\r\n      vec3.normalize(cp, cp);\r\n      ns.push(...cp, ...cp, ...cp, ...cp, ...cp, ...cp);\r\n    }\r\n  }\r\n\r\n  return {\r\n    vertex: new Float32Array(ps),\r\n    normal: new Float32Array(ns),\r\n  };\r\n};\r\n\r\nexport class Torus extends LightObject {\r\n  constructor(renderer: Renderer, options?: TorusOptions) {\r\n    super(renderer, buildData(options));\r\n  }\r\n}","import { Renderer } from './classes';\r\n\r\nexport async function initRenderer(canvas: HTMLCanvasElement): Promise<Renderer> {\r\n  if (!navigator.gpu) {\r\n    throw new Error('Your browser does not support WebGPU!');\r\n  }\r\n  const context = canvas.getContext('webgpu') as unknown as GPUCanvasContext;\r\n  const adapter = await navigator.gpu.requestAdapter() as GPUAdapter;\r\n  const device = await adapter.requestDevice();\r\n\r\n  canvas.width = canvas.clientWidth * devicePixelRatio;\r\n  canvas.height = canvas.clientHeight * devicePixelRatio;\r\n\r\n  return new Renderer(context, {\r\n    device,\r\n    canvas,\r\n    size: [canvas.width, canvas.height, 1.0],\r\n    format: context.getPreferredFormat(adapter),\r\n  });\r\n}","export type Shader = {\r\n  vertex: GPUShaderModuleDescriptorWGSL,\r\n  fragment: GPUShaderModuleDescriptorWGSL,\r\n};\r\n\r\nexport const defaultShader: Shader = {\r\n  vertex: {\r\n    code: `\r\n      struct Uniforms {\r\n        mvpMat: mat4x4<f32>;\r\n      };\r\n      [[group(0), binding(0)]] var<uniform> uniforms: Uniforms;\r\n      [[stage(vertex)]]\r\n      fn main([[location(0)]] pos: vec3<f32>) -> [[builtin(position)]] vec4<f32> {\r\n        return uniforms.mvpMat * vec4<f32>(pos, 1.0);\r\n      }\r\n    `,\r\n  },\r\n  fragment: {\r\n    code: `\r\n      [[stage(fragment)]]\r\n      fn main() -> [[location(0)]] vec4<f32> {\r\n        return vec4<f32>(1.0, 1.0, 0.0, 1.0);\r\n      }\r\n    `,\r\n  },\r\n};\r\n\r\nexport const lightShader: Shader = {\r\n  vertex: {\r\n    code: `\r\n      struct Uniforms {\r\n        vpMat: mat4x4<f32>;\r\n        modelMat: mat4x4<f32>;\r\n        normalMat: mat4x4<f32>;\r\n      };\r\n      [[group(0), binding(0)]] var<uniform> uniforms: Uniforms;\r\n      struct Output {\r\n        [[builtin(position)]] position: vec4<f32>;\r\n        [[location(0)]] pos: vec4<f32>;\r\n        [[location(1)]] normal: vec4<f32>;\r\n      };\r\n      [[stage(vertex)]]\r\n      fn main([[location(0)]] pos: vec4<f32>, [[location(1)]] normal: vec4<f32>) -> Output {\r\n        var output: Output;\r\n        output.pos = uniforms.modelMat * pos;\r\n        output.normal = uniforms.normalMat * normal;\r\n        output.position = uniforms.vpMat * output.pos;\r\n        return output;\r\n      }\r\n    `,\r\n  },\r\n  fragment: {\r\n    code: `\r\n      struct Uniforms {\r\n        lightPos: vec4<f32>;\r\n        eyePos: vec4<f32>;\r\n      };\r\n      [[group(0), binding(1)]] var<uniform> uniforms: Uniforms;\r\n      [[stage(fragment)]]\r\n      fn main([[location(0)]] pos: vec4<f32>, [[location(1)]] normal: vec4<f32>) -> [[location(0)]] vec4<f32> {\r\n        let N: vec3<f32> = normalize(normal.xyz);\r\n        let L: vec3<f32> = normalize(uniforms.lightPos.xyz - pos.xyz);\r\n        let V: vec3<f32> = normalize(uniforms.eyePos.xyz - pos.xyz);\r\n        let H: vec3<f32> = normalize(L + V);\r\n        let diffuse: f32 = 0.8 * max(dot(N, L), 0.0);\r\n        var specular: f32;\r\n        var isPhong: i32 = 0;\r\n        if (isPhong == 1) {\r\n          specular = 0.4 * pow(max(dot(V, reflect(-L, N)), 0.0), 30.0);\r\n        } else {\r\n          specular = 0.4 * pow(max(dot(N, H), 0.0), 30.0);\r\n        }\r\n        let ambient: f32 = 0.2;\r\n        let finalColor: vec3<f32> = vec3<f32>(1.0, 1.0, 0.0) * (ambient + diffuse) + vec3<f32>(1.0, 1.0, 1.0) * specular;\r\n        return vec4<f32>(finalColor, 1.0);\r\n      }\r\n    `,\r\n  },\r\n};","'use strict'\n\nmodule.exports = createTurntableController\n\nvar filterVector = require('filtered-vector')\nvar invert44     = require('gl-mat4/invert')\nvar rotateM      = require('gl-mat4/rotate')\nvar cross        = require('gl-vec3/cross')\nvar normalize3   = require('gl-vec3/normalize')\nvar dot3         = require('gl-vec3/dot')\n\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2))\n}\n\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x))\n}\n\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0])\n  var vy = Math.abs(v[1])\n  var vz = Math.abs(v[2])\n\n  var u = [0,0,0]\n  if(vx > Math.max(vy, vz)) {\n    u[2] = 1\n  } else if(vy > Math.max(vx, vz)) {\n    u[0] = 1\n  } else {\n    u[1] = 1\n  }\n\n  var vv = 0\n  var uv = 0\n  for(var i=0; i<3; ++i ) {\n    vv += v[i] * v[i]\n    uv += u[i] * v[i]\n  }\n  for(var i=0; i<3; ++i) {\n    u[i] -= (uv / vv) *  v[i]\n  }\n  normalize3(u, u)\n  return u\n}\n\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center)\n  this.up     = filterVector(up)\n  this.right  = filterVector(right)\n  this.radius = filterVector([radius])\n  this.angle  = filterVector([theta, phi])\n  this.angle.bounds = [[-Infinity,-Math.PI/2], [Infinity,Math.PI/2]]\n  this.setDistanceLimits(zoomMin, zoomMax)\n\n  this.computedCenter = this.center.curve(0)\n  this.computedUp     = this.up.curve(0)\n  this.computedRight  = this.right.curve(0)\n  this.computedRadius = this.radius.curve(0)\n  this.computedAngle  = this.angle.curve(0)\n  this.computedToward = [0,0,0]\n  this.computedEye    = [0,0,0]\n  this.computedMatrix = new Array(16)\n  for(var i=0; i<16; ++i) {\n    this.computedMatrix[i] = 0.5\n  }\n\n  this.recalcMatrix(0)\n}\n\nvar proto = TurntableController.prototype\n\nproto.setDistanceLimits = function(minDist, maxDist) {\n  if(minDist > 0) {\n    minDist = Math.log(minDist)\n  } else {\n    minDist = -Infinity\n  }\n  if(maxDist > 0) {\n    maxDist = Math.log(maxDist)\n  } else {\n    maxDist = Infinity\n  }\n  maxDist = Math.max(maxDist, minDist)\n  this.radius.bounds[0][0] = minDist\n  this.radius.bounds[1][0] = maxDist\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds[0]\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.recalcMatrix = function(t) {\n  //Recompute curves\n  this.center.curve(t)\n  this.up.curve(t)\n  this.right.curve(t)\n  this.radius.curve(t)\n  this.angle.curve(t)\n\n  //Compute frame for camera matrix\n  var up     = this.computedUp\n  var right  = this.computedRight\n  var uu = 0.0\n  var ur = 0.0\n  for(var i=0; i<3; ++i) {\n    ur += up[i] * right[i]\n    uu += up[i] * up[i]\n  }\n  var ul = Math.sqrt(uu)\n  var rr = 0.0\n  for(var i=0; i<3; ++i) {\n    right[i] -= up[i] * ur / uu\n    rr       += right[i] * right[i]\n    up[i]    /= ul\n  }\n  var rl = Math.sqrt(rr)\n  for(var i=0; i<3; ++i) {\n    right[i] /= rl\n  }\n\n  //Compute toward vector\n  var toward = this.computedToward\n  cross(toward, up, right)\n  normalize3(toward, toward)\n\n  //Compute angular parameters\n  var radius = Math.exp(this.computedRadius[0])\n  var theta  = this.computedAngle[0]\n  var phi    = this.computedAngle[1]\n\n  var ctheta = Math.cos(theta)\n  var stheta = Math.sin(theta)\n  var cphi   = Math.cos(phi)\n  var sphi   = Math.sin(phi)\n\n  var center = this.computedCenter\n\n  var wx = ctheta * cphi \n  var wy = stheta * cphi\n  var wz = sphi\n\n  var sx = -ctheta * sphi\n  var sy = -stheta * sphi\n  var sz = cphi\n\n  var eye = this.computedEye\n  var mat = this.computedMatrix\n  for(var i=0; i<3; ++i) {\n    var x      = wx * right[i] + wy * toward[i] + wz * up[i]\n    mat[4*i+1] = sx * right[i] + sy * toward[i] + sz * up[i]\n    mat[4*i+2] = x\n    mat[4*i+3] = 0.0\n  }\n\n  var ax = mat[1]\n  var ay = mat[5]\n  var az = mat[9]\n  var bx = mat[2]\n  var by = mat[6]\n  var bz = mat[10]\n  var cx = ay * bz - az * by\n  var cy = az * bx - ax * bz\n  var cz = ax * by - ay * bx\n  var cl = len3(cx, cy, cz)\n  cx /= cl\n  cy /= cl\n  cz /= cl\n  mat[0] = cx\n  mat[4] = cy\n  mat[8] = cz\n\n  for(var i=0; i<3; ++i) {\n    eye[i] = center[i] + mat[2+4*i]*radius\n  }\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n  mat[15] = 1.0\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = mat[i]\n    }\n    return result\n  }\n  return mat\n}\n\nvar zAxis = [0,0,0]\nproto.rotate = function(t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi)\n  if(droll) {\n    this.recalcMatrix(t)\n\n    var mat = this.computedMatrix\n    zAxis[0] = mat[2]\n    zAxis[1] = mat[6]\n    zAxis[2] = mat[10]\n\n    var up     = this.computedUp\n    var right  = this.computedRight\n    var toward = this.computedToward\n\n    for(var i=0; i<3; ++i) {\n      mat[4*i]   = up[i]\n      mat[4*i+1] = right[i]\n      mat[4*i+2] = toward[i]\n    }\n    rotateM(mat, mat, droll, zAxis)\n    for(var i=0; i<3; ++i) {\n      up[i] =    mat[4*i]\n      right[i] = mat[4*i+1]\n    }\n\n    this.up.set(t, up[0], up[1], up[2])\n    this.right.set(t, right[0], right[1], right[2])\n  }\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var dist = Math.exp(this.computedRadius[0])\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\n//Recenters the coordinate axes\nproto.setMatrix = function(t, mat, axes, noSnap) {\n  \n  //Get the axes for tare\n  var ushift = 1\n  if(typeof axes === 'number') {\n    ushift = (axes)|0\n  } \n  if(ushift < 0 || ushift > 3) {\n    ushift = 1\n  }\n  var vshift = (ushift + 2) % 3\n  var fshift = (ushift + 1) % 3\n\n  //Recompute state for new t value\n  if(!mat) { \n    this.recalcMatrix(t)\n    mat = this.computedMatrix\n  }\n\n  //Get right and up vectors\n  var ux = mat[ushift]\n  var uy = mat[ushift+4]\n  var uz = mat[ushift+8]\n  if(!noSnap) {\n    var ul = len3(ux, uy, uz)\n    ux /= ul\n    uy /= ul\n    uz /= ul\n  } else {\n    var ax = Math.abs(ux)\n    var ay = Math.abs(uy)\n    var az = Math.abs(uz)\n    var am = Math.max(ax,ay,az)\n    if(ax === am) {\n      ux = (ux < 0) ? -1 : 1\n      uy = uz = 0\n    } else if(az === am) {\n      uz = (uz < 0) ? -1 : 1\n      ux = uy = 0\n    } else {\n      uy = (uy < 0) ? -1 : 1\n      ux = uz = 0\n    }\n  }\n\n  var rx = mat[vshift]\n  var ry = mat[vshift+4]\n  var rz = mat[vshift+8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n  \n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  this.center.jump(t, ex, ey, ez)\n  this.radius.idle(t)\n  this.up.jump(t, ux, uy, uz)\n  this.right.jump(t, rx, ry, rz)\n\n  var phi, theta\n  if(ushift === 2) {\n    var cx = mat[1]\n    var cy = mat[5]\n    var cz = mat[9]\n    var cr = cx * rx + cy * ry + cz * rz\n    var cf = cx * fx + cy * fy + cz * fz\n    if(tu < 0) {\n      phi = -Math.PI/2\n    } else {\n      phi = Math.PI/2\n    }\n    theta = Math.atan2(cf, cr)\n  } else {\n    var tx = mat[2]\n    var ty = mat[6]\n    var tz = mat[10]\n    var tu = tx * ux + ty * uy + tz * uz\n    var tr = tx * rx + ty * ry + tz * rz\n    var tf = tx * fx + ty * fy + tz * fz\n\n    phi = Math.asin(clamp1(tu))\n    theta = Math.atan2(tf, tr)\n  }\n\n  this.angle.jump(t, theta, phi)\n\n  this.recalcMatrix(t)\n  var dx = mat[2]\n  var dy = mat[6]\n  var dz = mat[10]\n\n  var imat = this.computedMatrix\n  invert44(imat, mat)\n  var w  = imat[15]\n  var ex = imat[12] / w\n  var ey = imat[13] / w\n  var ez = imat[14] / w\n\n  var gs = Math.exp(this.computedRadius[0])\n  this.center.jump(t, ex-dx*gs, ey-dy*gs, ez-dz*gs)\n}\n\nproto.lastT = function() {\n  return Math.max(\n    this.center.lastT(),\n    this.up.lastT(),\n    this.right.lastT(),\n    this.radius.lastT(),\n    this.angle.lastT())\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.up.idle(t)\n  this.right.idle(t)\n  this.radius.idle(t)\n  this.angle.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.up.flush(t)\n  this.right.flush(t)\n  this.radius.flush(t)\n  this.angle.flush(t)\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  eye    = eye    || this.computedEye\n  center = center || this.computedCenter\n  up     = up     || this.computedUp\n\n  var ux = up[0]\n  var uy = up[1]\n  var uz = up[2]\n  var ul = len3(ux, uy, uz)\n  if(ul < 1e-6) {\n    return\n  }\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var tx = eye[0] - center[0]\n  var ty = eye[1] - center[1]\n  var tz = eye[2] - center[2]\n  var tl = len3(tx, ty, tz)\n  if(tl < 1e-6) {\n    return\n  }\n  tx /= tl\n  ty /= tl\n  tz /= tl\n\n  var right = this.computedRight\n  var rx = right[0]\n  var ry = right[1]\n  var rz = right[2]\n  var ru = ux*rx + uy*ry + uz*rz\n  rx -= ru * ux\n  ry -= ru * uy\n  rz -= ru * uz\n  var rl = len3(rx, ry, rz)\n\n  if(rl < 0.01) {\n    rx = uy * tz - uz * ty\n    ry = uz * tx - ux * tz\n    rz = ux * ty - uy * tx\n    rl = len3(rx, ry, rz)\n    if(rl < 1e-6) {\n      return\n    }\n  }\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  this.up.set(t, ux, uy, uz)\n  this.right.set(t, rx, ry, rz)\n  this.center.set(t, center[0], center[1], center[2])\n  this.radius.set(t, Math.log(tl))\n\n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var tu = ux*tx + uy*ty + uz*tz\n  var tr = rx*tx + ry*ty + rz*tz\n  var tf = fx*tx + fy*ty + fz*tz\n\n  var phi   = Math.asin(clamp1(tu))\n  var theta = Math.atan2(tf, tr)\n\n  var angleState = this.angle._state\n  var lastTheta  = angleState[angleState.length-1]\n  var lastPhi    = angleState[angleState.length-2]\n  lastTheta      = lastTheta % (2.0 * Math.PI)\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta)\n  var d0 = Math.abs(lastTheta - theta)\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta)\n  if(dp < d0) {\n    lastTheta += 2.0 * Math.PI\n  }\n  if(dn < d0) {\n    lastTheta -= 2.0 * Math.PI\n  }\n\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi)\n  this.angle.set(t, theta, phi)\n}\n\nfunction createTurntableController(options) {\n  options = options || {}\n\n  var center = options.center || [0,0,0]\n  var up     = options.up     || [0,1,0]\n  var right  = options.right  || findOrthoPair(up)\n  var radius = options.radius || 1.0\n  var theta  = options.theta  || 0.0\n  var phi    = options.phi    || 0.0\n\n  center = [].slice.call(center, 0, 3)\n\n  up = [].slice.call(up, 0, 3)\n  normalize3(up, up)\n\n  right = [].slice.call(right, 0, 3)\n  normalize3(right, right)\n\n  if('eye' in options) {\n    var eye = options.eye\n    var toward = [\n      eye[0]-center[0],\n      eye[1]-center[1],\n      eye[2]-center[2]\n    ]\n    cross(right, toward, up)\n    if(len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up)\n    } else {\n      normalize3(right, right)\n    }\n\n    radius = len3(toward[0], toward[1], toward[2])\n\n    var ut = dot3(up, toward) / radius\n    var rt = dot3(right, toward) / radius\n    phi    = Math.acos(ut)\n    theta  = Math.acos(rt)\n  }\n\n  //Use logarithmic coordinates for radius\n  radius = Math.log(radius)\n\n  //Return the controller\n  return new TurntableController(\n    options.zoomMin,\n    options.zoomMax,\n    center,\n    up,\n    right,\n    radius,\n    theta,\n    phi)\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { initRenderer } from './renderer';\r\nimport {\r\n  Cube,\r\n  CubeWireframe,\r\n  Cylinder,\r\n  CylinderWireframe,\r\n  Sphere,\r\n  SphereWireframe,\r\n  Torus,\r\n  TorusWireframe,\r\n} from './objects';\r\nimport './index.css';\r\n\r\nconst app = document.getElementById('app') as HTMLCanvasElement;\r\n\r\ninitRenderer(app)\r\n  .then((renderer) => {\r\n    const cube = new Cube(renderer);\r\n    const cubeWireframe = new CubeWireframe(renderer);\r\n    const cylinder = new Cylinder(renderer);\r\n    const cylinderWireframe = new CylinderWireframe(renderer);\r\n    const sphere = new Sphere(renderer);\r\n    const sphereWireframe = new SphereWireframe(renderer);\r\n    const torus = new Torus(renderer);\r\n    const torusWireframe = new TorusWireframe(renderer);\r\n\r\n    cube.translate([-1.5, 2, 0]).scale([0.3, 0.3, 0.3]);\r\n    cubeWireframe.translate([1, 2, 0]).scale([0.2, 0.2, 0.2]);\r\n    renderer.add(cube, cubeWireframe);\r\n\r\n    cylinder.translate([-1.5, 0.3, 0]).scale([0.3, 0.3, 0.3]);\r\n    cylinderWireframe.translate([1.5, 0.6, 0]).scale([0.2, 0.2, 0.2]);\r\n    renderer.add(cylinder, cylinderWireframe);\r\n\r\n    sphere.translate([-1.5, -2, 0]).scale([0.3, 0.3, 0.3]);\r\n    sphereWireframe.translate([1.5, -1, 0]).scale([0.2, 0.2, 0.2]);\r\n    renderer.add(sphere, sphereWireframe);\r\n\r\n    torus.translate([-1.5, -5, 0]).scale([0.3, 0.3, 0.3]);\r\n    torusWireframe.translate([2, -3, 0]).scale([0.2, 0.2, 0.2]);\r\n    renderer.add(torus, torusWireframe);\r\n\r\n    renderer.render(false);\r\n  })\r\n  .catch((e: Error) => {\r\n    document.write(e.message);\r\n  });"],"names":["module","exports","element","options","document","body","limits","Infinity","distanceLimits","zoomMin","zoomMax","view","createView","center","up","eye","mode","pmatrix","distance","width","clientWidth","height","clientHeight","camera","delay","rotateSpeed","zoomSpeed","translateSpeed","flipX","flipY","modes","tick","t","now","this","idle","flush","ctime","recalcMatrix","allEqual","matrix","computedMatrix","i","sizeChanged","Math","exp","computedRadius","lookAt","lastT","rotate","pitch","yaw","roll","pan","dx","dy","dz","translate","Object","defineProperties","get","set","mat","setMatrix","enumerable","getMode","setMode","computedCenter","ncenter","computedEye","neye","computedUp","nup","d","setDistance","getDistanceLimits","v","setDistanceLimits","addEventListener","ev","preventDefault","lastX","lastY","lastMods","shift","control","alt","meta","handleInteraction","buttons","x","y","mods","scale","drot","PI","kzoom","window","innerHeight","mouseChange","xy","mouseOffset","changedTouches","hasPassive","passive","mouseWheel","abs","innerWidth","turntable","createTurntable","orbit","createOrbit","createMatrix","ViewController","controllers","_controllerNames","keys","_controllerList","map","n","_mode","_active","proto","prototype","a0","cc","length","a1","a2","a3","getDistance","out","idx","indexOf","prev","next","max","ge","a","c","l","h","m","undefined","gt","lt","le","eq","p","norm","f","___CSS_LOADER_EXPORT___","push","id","cssWithMappingToString","list","toString","item","content","needLayer","concat","join","modules","media","dedupe","supports","layer","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","p0","v0","p1","v1","ti","t2","ti2","h00","h10","h01","h11","Array","derivative","dh00","dh10","dh01","dh11","initState","initVelocity","initTime","arguments","FilteredVector","zero","getZero","Error","cubicHermite","bsearch","clamp","lo","hi","min","state0","velocity0","t0","dimension","bounds","_state","slice","reverse","_velocity","_time","_scratch","result","splice","curve","time","state","velocity","ptr","tf","dt","x0","x1","steady","dcurve","stable","jump","j","sf","xc","move","statePtr","Float32Array","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","xz","yz","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","identity","y0","y1","z0","z1","len","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","sqrt","b","b0","b1","b2","b3","rad","axis","s","b12","b20","b21","b22","sin","cos","EPSILON","ARRAY_TYPE","RANDOM","random","setMatrixArrayType","type","degree","toRadian","equals","create","clone","copy","fromValues","m00","m01","m10","m11","transpose","invert","adjoint","determinant","multiply","fromRotation","fromScaling","str","frob","hypot","LDU","L","D","U","add","subtract","exactEquals","multiplyScalar","multiplyScalarAndAdd","mul","sub","tx","ty","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","fromTranslation","fromMat4","m02","m12","m20","m21","m22","fromMat2d","fromQuat","normalFromMat4","projection","a6","a7","a8","b6","b7","b8","m03","m13","m23","m30","m31","m32","m33","rotateX","rotateY","rotateZ","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","fromQuat2","translation","bx","by","bz","bw","ax","ay","az","aw","magnitude","getTranslation","getScaling","getRotation","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","frustum","left","right","bottom","top","near","far","rl","tb","nf","perspectiveNO","fovy","aspect","tan","perspective","perspectiveZO","perspectiveFromFieldOfView","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","orthoNO","lr","bt","ortho","orthoZO","targetTo","target","a9","a14","a15","b9","b13","b14","b15","divide","ceil","floor","round","scaleAndAdd","squaredDistance","squaredLength","negate","inverse","normalize","cross","lerp","hermite","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","angle","mag","cosine","acos","vec","div","dist","sqrDist","sqrLen","forEach","stride","offset","count","fn","arg","dot","u","A","B","C","E","F","G","H","I","J","v2","v3","v4","s1","s2","ix","iy","iz","iw","setAxisAngle","getAxisAngle","out_axis","getAngle","dotproduct","calculateW","et","ln","atan2","log","pow","slerp","omega","cosom","sinom","scale0","scale1","u1","u2","u3","sqrt1MinusU1","sqrtU1","invDot","conjugate","fromMat3","fRoot","fTrace","fromEuler","halfToRad","cx","cy","cz","tmpvec3","xUnitVec3","yUnitVec3","temp1","temp2","matr","rotationTo","sqlerp","setAxes","dq","w1","fromRotationTranslationValues","outer","getReal","getDual","setReal","setDual","ax1","ay1","az1","aw1","bx1","by1","bz1","ax2","ay2","az2","aw2","rotateByQuatAppend","rotateByQuatPrepend","rotateAroundAxis","axisLength","ax0","ay0","az0","aw0","bw1","bx0","by0","bz0","bw0","mt","sqlen","a_dot_b","transformMat2","transformMat2d","sinC","cosC","isBrowser","supported","opts","defineProperty","removeEventListener","e","detect","vec3","tmp","perspectiveMatrix","tmpVec4","row","pdum3","combine","scale2","skew","quaternion","mat4x4","mat3from4","m44","recompose","decompose","state1","start","end","alpha","r0","r1","mat4","temp","m4interp","invert44","DEFAULT_CENTER","MatrixCameraController","initialMatrix","_components","prevMatrix","nextMatrix","computedInverse","_limits","tidx","comps","imat","radius","mc","d2","tvec","lim","callback","buttonState","attached","updateMods","changed","altKey","shiftKey","ctrlKey","metaKey","handleEvent","nextButtons","nextX","mouse","nextY","clearState","handleBlur","handleMods","handleMouseMove","handleMouseDown","handleMouseUp","attachListeners","enabled","rootPosition","currentTarget","srcElement","isArray","clientX","clientY","rect","getBoundingClientRect","mouseElement","which","button","offsetX","offsetY","toPX","noScroll","lineHeight","listener","deltaX","deltaY","deltaZ","deltaMode","rx","ry","rz","ux","uy","uz","fx","fy","fz","tr","rotation","call","normalize4","OrbitCameraController","filterVector","mat4FromQuat","quatFromFrame","len3","len4","al","initQuat","initCenter","initRadius","computedRotation","quat","rr","getMatrix","ul","ru","fu","fr","fl","vx","vy","vz","bl","cw","cl","toJSON","fromJSON","String","num","parseFloat","match","g","performance","Date","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","api","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","style","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","getTarget","appendChild","createElement","attributes","styleElement","nonce","setAttribute","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","parseUnit","PIXELS_PER_INCH","getSizeBrutal","getPropertyInPX","prop","parts","getComputedStyle","getPropertyValue","unit","testDIV","size","trim","toLowerCase","isNaN","px","createCamera","RenderableObject","renderer","vertex","pipeline","vp","mvpMat","modelMat","constructor","canvas","createVertexBuffer","createRenderPipeline","createViewProjection","cameraOptions","createTransforms","context","queue","Set","configure","objects","object","delete","render","isAnimation","requestAnimationFrame","createIndexBuffer","buffer","device","createBuffer","byteLength","usage","GPUBufferUsage","INDEX","COPY_DST","mappedAtCreation","Uint32Array","getMappedRange","unmap","VERTEX","uniform","bindGroup","super","UNIFORM","createBindGroup","layout","getBindGroupLayout","entries","binding","resource","commandEncoder","createCommandEncoder","encoder","beginRenderPass","colorAttachments","getCurrentTexture","loadValue","storeOp","viewProjectionMat","projectionMat","writeBuffer","setPipeline","setVertexBuffer","setBindGroup","draw","endPass","submit","finish","format","fragment","defaultShader","createShaderModule","entryPoint","buffers","arrayStride","shaderLocation","targets","primitive","topology","texture","normal","normalMat","vertexUniform","fragmentUniform","createTexture","GPUTextureUsage","RENDER_ATTACHMENT","depthStencilAttachment","depthLoadValue","depthStoreOp","stencilLoadValue","stencilStoreOp","eyePosition","flat","lightPosition","lightShader","depthStencil","depthWriteEnabled","depthCompare","rotateXMat","rotateYMat","rotateZMat","translateMat","scaleMat","cameraPosition","viewMat","buildWireframeData","p2","p3","p4","p5","p6","p7","ps","CubeWireframe","WireframeObject","buildData","Cube","LightObject","compute","theta","snt","cnt","rin","rout","pts","CylinderWireframe","ns","Cylinder","SphereWireframe","Sphere","TorusWireframe","Torus","phi","snp","cnp","pt1","ca","db","cp","async","navigator","gpu","getContext","adapter","requestAdapter","requestDevice","devicePixelRatio","Renderer","getPreferredFormat","code","findOrthoPair","normalize3","toward","ut","dot3","rt","TurntableController","rotateM","clamp1","vv","uv","computedRight","computedAngle","computedToward","minDist","maxDist","uu","ur","ctheta","stheta","cphi","sphi","zAxis","dtheta","dphi","droll","axes","noSnap","ushift","vshift","am","ex","ey","ez","cr","cf","tu","tz","asin","gs","tl","angleState","lastTheta","lastPhi","dp","d0","dn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","key","globalThis","Function","hasOwnProperty","Symbol","toStringTag","value","app","getElementById","initRenderer","then","cube","cubeWireframe","cylinder","cylinderWireframe","sphere","sphereWireframe","torus","torusWireframe","catch","write","message"],"sourceRoot":""}